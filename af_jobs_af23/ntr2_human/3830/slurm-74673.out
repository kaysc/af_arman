>> Job started at: Tue Mar 14 16:24:32 CET 2023
   On Machine:     ilfgridgpun02fl.unicph.domain
   In directory:   /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830

>> GPU is 6

Loaded miniconda shell environment for bash
I0314 16:24:41.035552 140554315872064 templates.py:857] Using precomputed obsolete pdbs /projects/ilfgrid/data/alphafold-genetic-databases///pdb_mmcif/obsolete.dat.
I0314 16:24:41.242807 140554315872064 xla_bridge.py:353] Unable to initialize backend 'tpu_driver': NOT_FOUND: Unable to find driver in registry given worker: 
I0314 16:24:41.535423 140554315872064 xla_bridge.py:353] Unable to initialize backend 'rocm': NOT_FOUND: Could not find registered platform with name: "rocm". Available platform names are: CUDA Interpreter Host
I0314 16:24:41.535964 140554315872064 xla_bridge.py:353] Unable to initialize backend 'tpu': module 'jaxlib.xla_extension' has no attribute 'get_tpu_client'
I0314 16:24:41.536082 140554315872064 xla_bridge.py:353] Unable to initialize backend 'plugin': xla_extension has no attributes named get_plugin_device_client. Compile TensorFlow with //tensorflow/compiler/xla/python:enable_plugin_device set to true (defaults to false) to enable this.
I0314 16:24:45.487459 140554315872064 run_alphafold.py:386] Have 5 models: ['model_1_multimer_v3_pred_0', 'model_2_multimer_v3_pred_0', 'model_3_multimer_v3_pred_0', 'model_4_multimer_v3_pred_0', 'model_5_multimer_v3_pred_0']
I0314 16:24:45.488506 140554315872064 run_alphafold.py:403] Using random seed 900296656725734078 for the data pipeline
I0314 16:24:45.488785 140554315872064 run_alphafold.py:161] Predicting ntr2_human-3830
I0314 16:24:45.503386 140554315872064 pipeline_multimer.py:210] Running monomer pipeline on chain A: ntr2_human O95665
W0314 16:24:45.505027 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/A/uniref90_hits.sto
W0314 16:24:49.041522 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/A/mgnify_hits.sto
I0314 16:24:54.889709 140554315872064 hmmbuild.py:121] Launching subprocess ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmbuild', '--hand', '--amino', '/tmp/tmp2htbxwn5/output.hmm', '/tmp/tmp2htbxwn5/query.msa']
I0314 16:24:54.918896 140554315872064 utils.py:36] Started hmmbuild query
I0314 16:24:55.976265 140554315872064 hmmbuild.py:128] hmmbuild stdout:
# hmmbuild :: profile HMM construction from multiple sequence alignments
# HMMER 3.3.2 (Nov 2020); http://hmmer.org/
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# input alignment file:             /tmp/tmp2htbxwn5/query.msa
# output HMM file:                  /tmp/tmp2htbxwn5/output.hmm
# input alignment is asserted as:   protein
# model architecture construction:  hand-specified by RF annotation
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# idx name                  nseq  alen  mlen eff_nseq re/pos description
#---- -------------------- ----- ----- ----- -------- ------ -----------
1     query                 9511  1762   410    13.28  0.590 

# CPU time: 0.99u 0.05s 00:00:01.04 Elapsed: 00:00:01.05


stderr:


I0314 16:24:55.976504 140554315872064 utils.py:40] Finished hmmbuild query in 1.057 seconds
I0314 16:24:55.980077 140554315872064 hmmsearch.py:103] Launching sub-process ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmsearch', '--noali', '--cpu', '8', '--F1', '0.1', '--F2', '0.1', '--F3', '0.1', '--incE', '100', '-E', '100', '--domE', '100', '--incdomE', '100', '-A', '/tmp/tmpuwclrp0c/output.sto', '/tmp/tmpuwclrp0c/query.hmm', '/projects/ilfgrid/data/alphafold-genetic-databases///pdb_seqres/pdb_seqres.txt']
I0314 16:24:56.008684 140554315872064 utils.py:36] Started hmmsearch (pdb_seqres.txt) query
I0314 16:25:09.145658 140554315872064 utils.py:40] Finished hmmsearch (pdb_seqres.txt) query in 13.137 seconds
W0314 16:25:12.648167 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/A/bfd_uniref_hits.a3m
I0314 16:25:12.740724 140554315872064 templates.py:940] Searching for template for: METSSPRPPRPSSNPGLSLDARLGVDTRLWAKVLFTALYALIWALGAAGNALSAHVVLKARAGRAGRLRHHVLSLALAGLLLLLVGVPVELYSFVWFHYPWVFGDLGCRGYYFVHELCAYATVLSVAGLSAERCLAVCQPLRARSLLTPRRTRWLVALSWAASLGLALPMAVIMGQKHELETADGEPEPASRVCTVLVSRTALQVFIQVNVLVSFVLPLALTAFLNGVTVSHLLALCSQVPSTSTPGSSTPSRLELLSEEGLLSFIVWKKTFIQGGQVSLVRHKDVRRIRSLQRSVQVLRAIVVMYVICWLPYHARRLMYCYVPDDAWTDPLYNFYHYFYMVTNTLFYVSSAVTPLLYNAVSSSFRKLFLEAVSSLCGEHHPMKRLPPKPQSPTLMDTASGFGDPPETRT
I0314 16:25:13.312736 140554315872064 templates.py:267] Found an exact template match 5t04_A.
I0314 16:25:13.332565 140554315872064 templates.py:267] Found an exact template match 5t04_A.
I0314 16:25:13.716656 140554315872064 templates.py:267] Found an exact template match 4xee_A.
I0314 16:25:14.148854 140554315872064 templates.py:267] Found an exact template match 6pwc_R.
I0314 16:25:14.161851 140554315872064 templates.py:267] Found an exact template match 6pwc_R.
I0314 16:25:14.996164 140554315872064 templates.py:267] Found an exact template match 6os9_R.
I0314 16:25:15.011646 140554315872064 templates.py:267] Found an exact template match 6os9_R.
I0314 16:25:15.538181 140554315872064 templates.py:267] Found an exact template match 6osa_R.
I0314 16:25:15.553384 140554315872064 templates.py:267] Found an exact template match 6osa_R.
I0314 16:25:15.938164 140554315872064 templates.py:267] Found an exact template match 4xes_A.
I0314 16:25:16.176887 140554315872064 templates.py:267] Found an exact template match 4grv_A.
I0314 16:25:16.195102 140554315872064 templates.py:267] Found an exact template match 4grv_A.
I0314 16:25:16.453298 140554315872064 templates.py:267] Found an exact template match 7ul2_R.
I0314 16:25:16.466677 140554315872064 templates.py:267] Found an exact template match 7ul2_R.
I0314 16:25:16.814724 140554315872064 templates.py:267] Found an exact template match 6up7_R.
I0314 16:25:17.480487 140554315872064 templates.py:267] Found an exact template match 7l0p_C.
I0314 16:25:17.495362 140554315872064 templates.py:267] Found an exact template match 7l0p_C.
I0314 16:25:18.003532 140554315872064 templates.py:267] Found an exact template match 7l0q_C.
I0314 16:25:18.018127 140554315872064 templates.py:267] Found an exact template match 7l0q_C.
I0314 16:25:18.472128 140554315872064 templates.py:267] Found an exact template match 7l0r_C.
I0314 16:25:18.487859 140554315872064 templates.py:267] Found an exact template match 7l0r_C.
I0314 16:25:19.303228 140554315872064 templates.py:267] Found an exact template match 7l0s_C.
I0314 16:25:19.318748 140554315872064 templates.py:267] Found an exact template match 7l0s_C.
I0314 16:25:19.822751 140554315872064 templates.py:267] Found an exact template match 3zev_A.
I0314 16:25:19.836764 140554315872064 templates.py:267] Found an exact template match 3zev_A.
I0314 16:25:19.849698 140554315872064 templates.py:267] Found an exact template match 3zev_B.
I0314 16:25:19.863116 140554315872064 templates.py:267] Found an exact template match 3zev_B.
I0314 16:25:20.162246 140554315872064 templates.py:267] Found an exact template match 4bwb_A.
I0314 16:25:20.175763 140554315872064 templates.py:267] Found an exact template match 4bwb_A.
I0314 16:25:20.188580 140554315872064 templates.py:267] Found an exact template match 4bwb_B.
I0314 16:25:20.201389 140554315872064 templates.py:267] Found an exact template match 4bwb_B.
I0314 16:25:20.691589 140554315872064 templates.py:267] Found an exact template match 4buo_A.
I0314 16:25:21.611257 140554315872064 pipeline.py:234] Uniref90 MSA size: 10000 sequences.
I0314 16:25:21.611617 140554315872064 pipeline.py:235] BFD MSA size: 1441 sequences.
I0314 16:25:21.611679 140554315872064 pipeline.py:236] MGnify MSA size: 501 sequences.
I0314 16:25:21.611740 140554315872064 pipeline.py:237] Final (deduplicated) MSA size: 11439 sequences.
I0314 16:25:21.612301 140554315872064 pipeline.py:239] Total number of templates (NB: this can include bad templates and is later filtered to top 4): 20.
W0314 16:25:21.651777 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/A/uniprot_hits.sto
I0314 16:26:13.258553 140554315872064 pipeline_multimer.py:210] Running monomer pipeline on chain B: neurotensin gtp:3830
W0314 16:26:13.260400 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/B/uniref90_hits.sto
W0314 16:26:13.264450 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/B/mgnify_hits.sto
I0314 16:26:13.266721 140554315872064 hmmbuild.py:121] Launching subprocess ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmbuild', '--hand', '--amino', '/tmp/tmp9ir9m5rc/output.hmm', '/tmp/tmp9ir9m5rc/query.msa']
I0314 16:26:13.331395 140554315872064 utils.py:36] Started hmmbuild query
I0314 16:26:13.343555 140554315872064 hmmbuild.py:128] hmmbuild stdout:
# hmmbuild :: profile HMM construction from multiple sequence alignments
# HMMER 3.3.2 (Nov 2020); http://hmmer.org/
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# input alignment file:             /tmp/tmp9ir9m5rc/query.msa
# output HMM file:                  /tmp/tmp9ir9m5rc/output.hmm
# input alignment is asserted as:   protein
# model architecture construction:  hand-specified by RF annotation
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# idx name                  nseq  alen  mlen eff_nseq re/pos description
#---- -------------------- ----- ----- ----- -------- ------ -----------
1     query                    1    13    13     1.00  1.434 

# CPU time: 0.01u 0.00s 00:00:00.01 Elapsed: 00:00:00.01


stderr:


I0314 16:26:13.343703 140554315872064 utils.py:40] Finished hmmbuild query in 0.012 seconds
I0314 16:26:13.344428 140554315872064 hmmsearch.py:103] Launching sub-process ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmsearch', '--noali', '--cpu', '8', '--F1', '0.1', '--F2', '0.1', '--F3', '0.1', '--incE', '100', '-E', '100', '--domE', '100', '--incdomE', '100', '-A', '/tmp/tmpdyb2yj8b/output.sto', '/tmp/tmpdyb2yj8b/query.hmm', '/projects/ilfgrid/data/alphafold-genetic-databases///pdb_seqres/pdb_seqres.txt']
I0314 16:26:13.402182 140554315872064 utils.py:36] Started hmmsearch (pdb_seqres.txt) query
I0314 16:26:14.913272 140554315872064 utils.py:40] Finished hmmsearch (pdb_seqres.txt) query in 1.511 seconds
W0314 16:26:14.925116 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/B/bfd_uniref_hits.a3m
I0314 16:26:14.927963 140554315872064 templates.py:940] Searching for template for: XLYENKPRRPYIL
W0314 16:26:15.291883 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 2lyw_B. Realigning the template to the actual sequence.
I0314 16:26:15.292064 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:15.292490 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpuxrzdst7/input.fasta -o /tmp/tmpuxrzdst7/output.a3m -format fasta"
I0314 16:26:15.357793 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:15.358582 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpuxrzdst7/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpuxrzdst7/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:15.358677 140554315872064 utils.py:40] Finished Kalign query in 0.001 seconds
I0314 16:26:15.359192 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:15.359291 140554315872064 templates.py:555] Sequence in 2lyw_B: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:15.550796 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 2oyv_A. Realigning the template to the actual sequence.
I0314 16:26:15.550951 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:15.551370 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpscdbtl6e/input.fasta -o /tmp/tmpscdbtl6e/output.a3m -format fasta"
I0314 16:26:15.611233 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:15.612001 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpscdbtl6e/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpscdbtl6e/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:15.612090 140554315872064 utils.py:40] Finished Kalign query in 0.000 seconds
I0314 16:26:15.612696 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:15.612798 140554315872064 templates.py:555] Sequence in 2oyv_A: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:15.816564 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 2oyw_A. Realigning the template to the actual sequence.
I0314 16:26:15.816743 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:15.817146 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpx550j6d3/input.fasta -o /tmp/tmpx550j6d3/output.a3m -format fasta"
I0314 16:26:16.005115 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:16.005884 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpx550j6d3/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpx550j6d3/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:16.005981 140554315872064 utils.py:40] Finished Kalign query in 0.000 seconds
I0314 16:26:16.006522 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:16.006681 140554315872064 templates.py:555] Sequence in 2oyw_A: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:16.374215 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 3f6k_N. Realigning the template to the actual sequence.
I0314 16:26:16.374407 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:16.374856 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpf9wcpn7p/input.fasta -o /tmp/tmpf9wcpn7p/output.a3m -format fasta"
I0314 16:26:16.578041 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:16.578822 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpf9wcpn7p/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpf9wcpn7p/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:16.578915 140554315872064 utils.py:40] Finished Kalign query in 0.001 seconds
I0314 16:26:16.579459 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:16.579572 140554315872064 templates.py:555] Sequence in 3f6k_N: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:17.195306 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 4po7_N. Realigning the template to the actual sequence.
I0314 16:26:17.195498 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:17.195924 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpk6qxsl0s/input.fasta -o /tmp/tmpk6qxsl0s/output.a3m -format fasta"
I0314 16:26:17.389617 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:17.390409 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpk6qxsl0s/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpk6qxsl0s/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:17.390512 140554315872064 utils.py:40] Finished Kalign query in 0.001 seconds
I0314 16:26:17.391051 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:17.391157 140554315872064 templates.py:555] Sequence in 4po7_N: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:17.392752 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 4po7_P. Realigning the template to the actual sequence.
I0314 16:26:17.392856 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:17.393154 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpxyn5c3ah/input.fasta -o /tmp/tmpxyn5c3ah/output.a3m -format fasta"
I0314 16:26:17.527605 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:17.528369 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpxyn5c3ah/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpxyn5c3ah/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:17.528469 140554315872064 utils.py:40] Finished Kalign query in 0.000 seconds
I0314 16:26:17.529031 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:17.529139 140554315872064 templates.py:555] Sequence in 4po7_P: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:19.117368 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_C. Realigning the template to the actual sequence.
I0314 16:26:19.117530 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:19.117931 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmp9ok_njk6/input.fasta -o /tmp/tmp9ok_njk6/output.a3m -format fasta"
I0314 16:26:19.323818 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:19.324542 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmp9ok_njk6/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmp9ok_njk6/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:19.324663 140554315872064 utils.py:40] Finished Kalign query in 0.001 seconds
I0314 16:26:19.325172 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:19.325278 140554315872064 templates.py:555] Sequence in 5luz_C: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:19.326813 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_D. Realigning the template to the actual sequence.
I0314 16:26:19.326906 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:19.327223 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpcwlqx8__/input.fasta -o /tmp/tmpcwlqx8__/output.a3m -format fasta"
I0314 16:26:19.578445 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:19.579229 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpcwlqx8__/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpcwlqx8__/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:19.579334 140554315872064 utils.py:40] Finished Kalign query in 0.001 seconds
I0314 16:26:19.579876 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:19.579995 140554315872064 templates.py:555] Sequence in 5luz_D: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:19.581512 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_P. Realigning the template to the actual sequence.
I0314 16:26:19.581605 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:19.581959 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmp9sagx_k3/input.fasta -o /tmp/tmp9sagx_k3/output.a3m -format fasta"
I0314 16:26:19.704876 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:19.705782 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmp9sagx_k3/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmp9sagx_k3/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:19.705880 140554315872064 utils.py:40] Finished Kalign query in 0.001 seconds
I0314 16:26:19.706416 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:19.706534 140554315872064 templates.py:555] Sequence in 5luz_P: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0314 16:26:19.707999 140554315872064 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_Q. Realigning the template to the actual sequence.
I0314 16:26:19.708093 140554315872064 kalign.py:66] Aligning 2 sequences
I0314 16:26:19.708458 140554315872064 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpvz31yq_f/input.fasta -o /tmp/tmpvz31yq_f/output.a3m -format fasta"
I0314 16:26:19.791612 140554315872064 utils.py:36] Started Kalign query
I0314 16:26:19.792469 140554315872064 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpvz31yq_f/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpvz31yq_f/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0314 16:26:19.792580 140554315872064 utils.py:40] Finished Kalign query in 0.001 seconds
I0314 16:26:19.793140 140554315872064 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0314 16:26:19.793256 140554315872064 templates.py:555] Sequence in 5luz_Q: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
I0314 16:26:20.316196 140554315872064 templates.py:267] Found an exact template match 2lne_A.
I0314 16:26:20.832668 140554315872064 templates.py:267] Found an exact template match 2lnf_A.
I0314 16:26:21.353380 140554315872064 templates.py:267] Found an exact template match 2lng_A.
I0314 16:26:21.356700 140554315872064 templates.py:718] hit 3zev_C did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.356818 140554315872064 templates.py:718] hit 3zev_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.356908 140554315872064 templates.py:718] hit 6yvr_CCC did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357006 140554315872064 templates.py:718] hit 6yvr_DDD did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357078 140554315872064 templates.py:718] hit 4grv_B did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357161 140554315872064 templates.py:718] hit 4xee_B did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357231 140554315872064 templates.py:718] hit 4xes_B did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357299 140554315872064 templates.py:718] hit 5t04_B did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357374 140554315872064 templates.py:718] hit 6pwc_B did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357444 140554315872064 templates.py:718] hit 6up7_C did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357511 140554315872064 templates.py:718] hit 6z4v_BBB did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357580 140554315872064 templates.py:718] hit 4buo_C did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357664 140554315872064 templates.py:718] hit 4buo_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357732 140554315872064 templates.py:718] hit 4bv0_C did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357796 140554315872064 templates.py:718] hit 4bv0_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357861 140554315872064 templates.py:718] hit 4bwb_C did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357926 140554315872064 templates.py:718] hit 4bwb_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.357994 140554315872064 templates.py:718] hit 7l0p_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.358061 140554315872064 templates.py:718] hit 7l0q_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.358128 140554315872064 templates.py:718] hit 7l0r_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.358204 140554315872064 templates.py:718] hit 7l0s_D did not pass prefilter: Template too short. Length: 6.
I0314 16:26:21.358288 140554315872064 templates.py:718] hit 1g0y_R did not pass prefilter: Template too short. Length: 5.
I0314 16:26:21.532146 140554315872064 templates.py:267] Found an exact template match 1g0y_R.
I0314 16:26:21.545415 140554315872064 templates.py:718] hit 1itb_B did not pass prefilter: Template too short. Length: 5.
I0314 16:26:22.608771 140554315872064 templates.py:267] Found an exact template match 1itb_B.
I0314 16:26:22.624161 140554315872064 templates.py:718] hit 1ira_Y did not pass prefilter: Template too short. Length: 5.
I0314 16:26:22.855565 140554315872064 templates.py:267] Found an exact template match 1ira_Y.
I0314 16:26:22.868190 140554315872064 templates.py:718] hit 4gaf_B did not pass prefilter: Template too short. Length: 5.
I0314 16:26:23.258639 140554315872064 templates.py:267] Found an exact template match 4gaf_B.
I0314 16:26:23.272081 140554315872064 templates.py:718] hit 4dep_B did not pass prefilter: Template too short. Length: 5.
I0314 16:26:23.986694 140554315872064 templates.py:267] Found an exact template match 4dep_B.
I0314 16:26:23.998297 140554315872064 templates.py:718] hit 4dep_E did not pass prefilter: Template too short. Length: 5.
I0314 16:26:23.998483 140554315872064 templates.py:267] Found an exact template match 4dep_E.
I0314 16:26:24.010749 140554315872064 templates.py:718] hit 4v3p_SC did not pass prefilter: Template too short. Length: 7.
I0314 16:26:24.010851 140554315872064 templates.py:718] hit 4v3p_SC did not pass prefilter: Template too short. Length: 8.
I0314 16:26:24.010935 140554315872064 templates.py:718] hit 4v7e_BJ did not pass prefilter: Template too short. Length: 7.
I0314 16:26:24.011008 140554315872064 templates.py:718] hit 4v7e_BJ did not pass prefilter: Template too short. Length: 8.
I0314 16:26:24.011092 140554315872064 templates.py:718] hit 7qix_Q did not pass prefilter: Template too short. Length: 6.
I0314 16:26:24.011160 140554315872064 templates.py:718] hit 7qix_Q did not pass prefilter: Template too short. Length: 8.
I0314 16:26:24.011229 140554315872064 templates.py:718] hit 7qiz_GA did not pass prefilter: Template too short. Length: 6.
I0314 16:26:24.011294 140554315872064 templates.py:718] hit 7qiz_GA did not pass prefilter: Template too short. Length: 8.
I0314 16:26:24.011370 140554315872064 templates.py:718] hit 1yfn_A did not pass prefilter: Template too short. Length: 7.
I0314 16:26:24.011438 140554315872064 templates.py:718] hit 1yfn_B did not pass prefilter: Template too short. Length: 7.
I0314 16:26:24.011502 140554315872064 templates.py:718] hit 1yfn_C did not pass prefilter: Template too short. Length: 7.
I0314 16:26:24.011566 140554315872064 templates.py:718] hit 1yfn_D did not pass prefilter: Template too short. Length: 7.
I0314 16:26:24.992414 140554315872064 templates.py:267] Found an exact template match 1zsz_B.
I0314 16:26:24.998554 140554315872064 templates.py:267] Found an exact template match 1zsz_A.
I0314 16:26:25.141398 140554315872064 templates.py:267] Found an exact template match 1ou8_A.
I0314 16:26:25.146192 140554315872064 templates.py:267] Found an exact template match 1ou8_B.
I0314 16:26:25.276569 140554315872064 templates.py:267] Found an exact template match 1twb_A.
I0314 16:26:25.281115 140554315872064 templates.py:267] Found an exact template match 1twb_B.
I0314 16:26:25.285442 140554315872064 templates.py:718] hit 8et3_Y did not pass prefilter: Template too short. Length: 7.
I0314 16:26:25.285547 140554315872064 templates.py:718] hit 8et3_Z did not pass prefilter: Template too short. Length: 7.
I0314 16:26:40.466961 140554315872064 templates.py:267] Found an exact template match 3jbn_A3.
I0314 16:26:40.473271 140554315872064 templates.py:718] hit 3jbn_A3 did not pass prefilter: Template too short. Length: 8.
I0314 16:26:53.451736 140554315872064 templates.py:267] Found an exact template match 3jbo_A3.
I0314 16:26:53.457618 140554315872064 templates.py:718] hit 3jbo_A3 did not pass prefilter: Template too short. Length: 8.
I0314 16:27:06.971993 140554315872064 templates.py:267] Found an exact template match 3jbp_A3.
I0314 16:27:06.977889 140554315872064 templates.py:718] hit 3jbp_A3 did not pass prefilter: Template too short. Length: 8.
I0314 16:27:06.978010 140554315872064 templates.py:718] hit 1ox9_A did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978097 140554315872064 templates.py:718] hit 1ox9_B did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978193 140554315872064 templates.py:718] hit 1ox9_C did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978281 140554315872064 templates.py:718] hit 1ox9_D did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978373 140554315872064 templates.py:718] hit 1ox9_E did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978442 140554315872064 templates.py:718] hit 1ox9_F did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978509 140554315872064 templates.py:718] hit 1ox9_G did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978575 140554315872064 templates.py:718] hit 1ox9_H did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978661 140554315872064 templates.py:718] hit 1ox8_A did not pass prefilter: Template too short. Length: 7.
I0314 16:27:06.978726 140554315872064 templates.py:718] hit 1ox8_B did not pass prefilter: Template too short. Length: 7.
I0314 16:27:07.193635 140554315872064 templates.py:267] Found an exact template match 1ou9_A.
I0314 16:27:07.200228 140554315872064 templates.py:267] Found an exact template match 1ou9_B.
I0314 16:27:07.205725 140554315872064 templates.py:267] Found an exact template match 1ou9_C.
I0314 16:27:07.346546 140554315872064 templates.py:267] Found an exact template match 1oul_A.
I0314 16:27:07.351855 140554315872064 templates.py:267] Found an exact template match 1oul_B.
I0314 16:27:07.357023 140554315872064 templates.py:718] hit 4v8m_A6 did not pass prefilter: Template too short. Length: 5.
I0314 16:27:07.357125 140554315872064 templates.py:718] hit 4v8m_A6 did not pass prefilter: Template too short. Length: 8.
I0314 16:27:24.376603 140554315872064 templates.py:267] Found an exact template match 4v8m_A6.
I0314 16:27:33.252663 140554315872064 templates.py:267] Found an exact template match 3j79_3.
I0314 16:27:33.258376 140554315872064 templates.py:718] hit 3j79_3 did not pass prefilter: Template too short. Length: 8.
I0314 16:27:43.252597 140554315872064 templates.py:267] Found an exact template match 5umd_3.
I0314 16:27:43.259118 140554315872064 templates.py:718] hit 5umd_3 did not pass prefilter: Template too short. Length: 8.
I0314 16:27:43.259267 140554315872064 templates.py:718] hit 6os9_L did not pass prefilter: Template too short. Length: 6.
I0314 16:27:43.259386 140554315872064 templates.py:718] hit 6osa_L did not pass prefilter: Template too short. Length: 6.
I0314 16:27:43.259472 140554315872064 templates.py:718] hit 5t2a_6 did not pass prefilter: Template too short. Length: 5.
I0314 16:27:43.259548 140554315872064 templates.py:718] hit 5t2a_6 did not pass prefilter: Template too short. Length: 8.
I0314 16:27:58.639794 140554315872064 templates.py:267] Found an exact template match 5t2a_6.
I0314 16:27:58.648485 140554315872064 templates.py:718] hit 6az1_D did not pass prefilter: Template too short. Length: 5.
I0314 16:27:58.648601 140554315872064 templates.py:718] hit 6az1_D did not pass prefilter: Template too short. Length: 8.
I0314 16:28:04.422767 140554315872064 templates.py:267] Found an exact template match 6az1_D.
I0314 16:28:04.434158 140554315872064 templates.py:718] hit 4c3o_B did not pass prefilter: Template too short. Length: 9.
I0314 16:28:04.434315 140554315872064 templates.py:718] hit 4c3o_D did not pass prefilter: Template too short. Length: 9.
I0314 16:28:04.434439 140554315872064 templates.py:718] hit 4c3o_F did not pass prefilter: Template too short. Length: 9.
I0314 16:28:04.434561 140554315872064 templates.py:718] hit 7ase_B did not pass prefilter: Template too short. Length: 5.
I0314 16:28:04.434675 140554315872064 templates.py:718] hit 7ase_B did not pass prefilter: Template too short. Length: 8.
I0314 16:28:15.846154 140554315872064 templates.py:267] Found an exact template match 7ase_B.
I0314 16:28:15.854815 140554315872064 templates.py:718] hit 5opt_b did not pass prefilter: Template too short. Length: 5.
I0314 16:28:15.854990 140554315872064 templates.py:718] hit 5opt_b did not pass prefilter: Template too short. Length: 8.
I0314 16:28:21.053992 140554315872064 templates.py:267] Found an exact template match 5opt_b.
I0314 16:28:21.062998 140554315872064 pipeline.py:234] Uniref90 MSA size: 1 sequences.
I0314 16:28:21.063114 140554315872064 pipeline.py:235] BFD MSA size: 28 sequences.
I0314 16:28:21.063179 140554315872064 pipeline.py:236] MGnify MSA size: 1 sequences.
I0314 16:28:21.063237 140554315872064 pipeline.py:237] Final (deduplicated) MSA size: 28 sequences.
I0314 16:28:21.063301 140554315872064 pipeline.py:239] Total number of templates (NB: this can include bad templates and is later filtered to top 4): 6.
W0314 16:28:21.994542 140554315872064 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/ntr2_human/3830/ntr2_human-3830/msas/B/uniprot_hits.sto
I0314 16:28:23.293908 140554315872064 run_alphafold.py:191] Running model model_1_multimer_v3_pred_0 on ntr2_human-3830
I0314 16:28:23.294676 140554315872064 model.py:165] Running predict with shape(feat) = {'aatype': (423,), 'residue_index': (423,), 'seq_length': (), 'msa': (2075, 423), 'num_alignments': (), 'template_aatype': (4, 423), 'template_all_atom_mask': (4, 423, 37), 'template_all_atom_positions': (4, 423, 37, 3), 'asym_id': (423,), 'sym_id': (423,), 'entity_id': (423,), 'deletion_matrix': (2075, 423), 'deletion_mean': (423,), 'all_atom_mask': (423, 37), 'all_atom_positions': (423, 37, 3), 'assembly_num_chains': (), 'entity_mask': (423,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 423), 'seq_mask': (423,), 'msa_mask': (2075, 423)}
I0314 16:38:20.034961 140554315872064 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (423, 423, 64)}, 'experimentally_resolved': {'logits': (423, 37)}, 'masked_msa': {'logits': (508, 423, 22)}, 'num_recycles': (), 'predicted_aligned_error': (423, 423), 'predicted_lddt': {'logits': (423, 50)}, 'structure_module': {'final_atom_mask': (423, 37), 'final_atom_positions': (423, 37, 3)}, 'plddt': (423,), 'aligned_confidence_probs': (423, 423, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0314 16:38:20.036234 140554315872064 run_alphafold.py:203] Total JAX model model_1_multimer_v3_pred_0 on ntr2_human-3830 predict time (includes compilation time, see --benchmark): 596.7s
I0314 16:38:32.211727 140554315872064 run_alphafold.py:191] Running model model_2_multimer_v3_pred_0 on ntr2_human-3830
I0314 16:38:32.212566 140554315872064 model.py:165] Running predict with shape(feat) = {'aatype': (423,), 'residue_index': (423,), 'seq_length': (), 'msa': (2075, 423), 'num_alignments': (), 'template_aatype': (4, 423), 'template_all_atom_mask': (4, 423, 37), 'template_all_atom_positions': (4, 423, 37, 3), 'asym_id': (423,), 'sym_id': (423,), 'entity_id': (423,), 'deletion_matrix': (2075, 423), 'deletion_mean': (423,), 'all_atom_mask': (423, 37), 'all_atom_positions': (423, 37, 3), 'assembly_num_chains': (), 'entity_mask': (423,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 423), 'seq_mask': (423,), 'msa_mask': (2075, 423)}
I0314 16:52:34.253119 140554315872064 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (423, 423, 64)}, 'experimentally_resolved': {'logits': (423, 37)}, 'masked_msa': {'logits': (508, 423, 22)}, 'num_recycles': (), 'predicted_aligned_error': (423, 423), 'predicted_lddt': {'logits': (423, 50)}, 'structure_module': {'final_atom_mask': (423, 37), 'final_atom_positions': (423, 37, 3)}, 'plddt': (423,), 'aligned_confidence_probs': (423, 423, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0314 16:52:34.254979 140554315872064 run_alphafold.py:203] Total JAX model model_2_multimer_v3_pred_0 on ntr2_human-3830 predict time (includes compilation time, see --benchmark): 842.0s
I0314 16:52:46.125964 140554315872064 run_alphafold.py:191] Running model model_3_multimer_v3_pred_0 on ntr2_human-3830
I0314 16:52:46.126266 140554315872064 model.py:165] Running predict with shape(feat) = {'aatype': (423,), 'residue_index': (423,), 'seq_length': (), 'msa': (2075, 423), 'num_alignments': (), 'template_aatype': (4, 423), 'template_all_atom_mask': (4, 423, 37), 'template_all_atom_positions': (4, 423, 37, 3), 'asym_id': (423,), 'sym_id': (423,), 'entity_id': (423,), 'deletion_matrix': (2075, 423), 'deletion_mean': (423,), 'all_atom_mask': (423, 37), 'all_atom_positions': (423, 37, 3), 'assembly_num_chains': (), 'entity_mask': (423,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 423), 'seq_mask': (423,), 'msa_mask': (2075, 423)}
I0314 17:03:46.636144 140554315872064 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (423, 423, 64)}, 'experimentally_resolved': {'logits': (423, 37)}, 'masked_msa': {'logits': (508, 423, 22)}, 'num_recycles': (), 'predicted_aligned_error': (423, 423), 'predicted_lddt': {'logits': (423, 50)}, 'structure_module': {'final_atom_mask': (423, 37), 'final_atom_positions': (423, 37, 3)}, 'plddt': (423,), 'aligned_confidence_probs': (423, 423, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0314 17:03:46.644594 140554315872064 run_alphafold.py:203] Total JAX model model_3_multimer_v3_pred_0 on ntr2_human-3830 predict time (includes compilation time, see --benchmark): 660.5s
I0314 17:03:58.740963 140554315872064 run_alphafold.py:191] Running model model_4_multimer_v3_pred_0 on ntr2_human-3830
I0314 17:03:58.741266 140554315872064 model.py:165] Running predict with shape(feat) = {'aatype': (423,), 'residue_index': (423,), 'seq_length': (), 'msa': (2075, 423), 'num_alignments': (), 'template_aatype': (4, 423), 'template_all_atom_mask': (4, 423, 37), 'template_all_atom_positions': (4, 423, 37, 3), 'asym_id': (423,), 'sym_id': (423,), 'entity_id': (423,), 'deletion_matrix': (2075, 423), 'deletion_mean': (423,), 'all_atom_mask': (423, 37), 'all_atom_positions': (423, 37, 3), 'assembly_num_chains': (), 'entity_mask': (423,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 423), 'seq_mask': (423,), 'msa_mask': (2075, 423)}
I0314 17:16:54.238199 140554315872064 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (423, 423, 64)}, 'experimentally_resolved': {'logits': (423, 37)}, 'masked_msa': {'logits': (508, 423, 22)}, 'num_recycles': (), 'predicted_aligned_error': (423, 423), 'predicted_lddt': {'logits': (423, 50)}, 'structure_module': {'final_atom_mask': (423, 37), 'final_atom_positions': (423, 37, 3)}, 'plddt': (423,), 'aligned_confidence_probs': (423, 423, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0314 17:16:54.244641 140554315872064 run_alphafold.py:203] Total JAX model model_4_multimer_v3_pred_0 on ntr2_human-3830 predict time (includes compilation time, see --benchmark): 775.5s
I0314 17:17:06.766902 140554315872064 run_alphafold.py:191] Running model model_5_multimer_v3_pred_0 on ntr2_human-3830
I0314 17:17:06.768429 140554315872064 model.py:165] Running predict with shape(feat) = {'aatype': (423,), 'residue_index': (423,), 'seq_length': (), 'msa': (2075, 423), 'num_alignments': (), 'template_aatype': (4, 423), 'template_all_atom_mask': (4, 423, 37), 'template_all_atom_positions': (4, 423, 37, 3), 'asym_id': (423,), 'sym_id': (423,), 'entity_id': (423,), 'deletion_matrix': (2075, 423), 'deletion_mean': (423,), 'all_atom_mask': (423, 37), 'all_atom_positions': (423, 37, 3), 'assembly_num_chains': (), 'entity_mask': (423,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 423), 'seq_mask': (423,), 'msa_mask': (2075, 423)}
I0314 17:31:09.551279 140554315872064 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (423, 423, 64)}, 'experimentally_resolved': {'logits': (423, 37)}, 'masked_msa': {'logits': (508, 423, 22)}, 'num_recycles': (), 'predicted_aligned_error': (423, 423), 'predicted_lddt': {'logits': (423, 50)}, 'structure_module': {'final_atom_mask': (423, 37), 'final_atom_positions': (423, 37, 3)}, 'plddt': (423,), 'aligned_confidence_probs': (423, 423, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0314 17:31:09.553869 140554315872064 run_alphafold.py:203] Total JAX model model_5_multimer_v3_pred_0 on ntr2_human-3830 predict time (includes compilation time, see --benchmark): 842.8s
I0314 17:31:20.877706 140554315872064 run_alphafold.py:277] Final timings for ntr2_human-3830: {'features': 217.2565212249756, 'process_features_model_1_multimer_v3_pred_0': 1.0728836059570312e-05, 'predict_and_compile_model_1_multimer_v3_pred_0': 596.742116689682, 'process_features_model_2_multimer_v3_pred_0': 3.743171691894531e-05, 'predict_and_compile_model_2_multimer_v3_pred_0': 842.0427386760712, 'process_features_model_3_multimer_v3_pred_0': 8.106231689453125e-06, 'predict_and_compile_model_3_multimer_v3_pred_0': 660.5184597969055, 'process_features_model_4_multimer_v3_pred_0': 1.0728836059570312e-05, 'predict_and_compile_model_4_multimer_v3_pred_0': 775.503420829773, 'process_features_model_5_multimer_v3_pred_0': 7.200241088867188e-05, 'predict_and_compile_model_5_multimer_v3_pred_0': 842.785980463028}

>> Job finished at: Tue Mar 14 17:31:38 CET 2023

>> Runtime: 4025 s
