>> Job started at: Fri Mar  3 13:04:21 CET 2023
   On Machine:     ilfgridgpun02fl.unicph.domain
   In directory:   /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162

>> GPU is 0

Loaded miniconda shell environment for bash
I0303 13:04:29.786049 140610081924928 templates.py:857] Using precomputed obsolete pdbs /projects/ilfgrid/data/alphafold-genetic-databases///pdb_mmcif/obsolete.dat.
I0303 13:04:29.991745 140610081924928 xla_bridge.py:353] Unable to initialize backend 'tpu_driver': NOT_FOUND: Unable to find driver in registry given worker: 
I0303 13:04:30.281386 140610081924928 xla_bridge.py:353] Unable to initialize backend 'rocm': NOT_FOUND: Could not find registered platform with name: "rocm". Available platform names are: Interpreter Host CUDA
I0303 13:04:30.281854 140610081924928 xla_bridge.py:353] Unable to initialize backend 'tpu': module 'jaxlib.xla_extension' has no attribute 'get_tpu_client'
I0303 13:04:30.281967 140610081924928 xla_bridge.py:353] Unable to initialize backend 'plugin': xla_extension has no attributes named get_plugin_device_client. Compile TensorFlow with //tensorflow/compiler/xla/python:enable_plugin_device set to true (defaults to false) to enable this.
I0303 13:04:34.632079 140610081924928 run_alphafold.py:386] Have 5 models: ['model_1_multimer_v3_pred_0', 'model_2_multimer_v3_pred_0', 'model_3_multimer_v3_pred_0', 'model_4_multimer_v3_pred_0', 'model_5_multimer_v3_pred_0']
I0303 13:04:34.632291 140610081924928 run_alphafold.py:403] Using random seed 210080537133940173 for the data pipeline
I0303 13:04:34.632644 140610081924928 run_alphafold.py:161] Predicting gnrhr_rat-1162
I0303 13:04:34.644899 140610081924928 pipeline_multimer.py:210] Running monomer pipeline on chain A: gnrhr_rat P30969
W0303 13:04:34.646434 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/A/uniref90_hits.sto
W0303 13:04:36.736462 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/A/mgnify_hits.sto
I0303 13:04:41.587635 140610081924928 hmmbuild.py:121] Launching subprocess ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmbuild', '--hand', '--amino', '/tmp/tmp6vnys2pm/output.hmm', '/tmp/tmp6vnys2pm/query.msa']
I0303 13:04:41.667757 140610081924928 utils.py:36] Started hmmbuild query
I0303 13:04:42.711381 140610081924928 hmmbuild.py:128] hmmbuild stdout:
# hmmbuild :: profile HMM construction from multiple sequence alignments
# HMMER 3.3.2 (Nov 2020); http://hmmer.org/
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# input alignment file:             /tmp/tmp6vnys2pm/query.msa
# output HMM file:                  /tmp/tmp6vnys2pm/output.hmm
# input alignment is asserted as:   protein
# model architecture construction:  hand-specified by RF annotation
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# idx name                  nseq  alen  mlen eff_nseq re/pos description
#---- -------------------- ----- ----- ----- -------- ------ -----------
1     query                 9644  1893   327     7.94  0.590 

# CPU time: 0.98u 0.05s 00:00:01.03 Elapsed: 00:00:01.03


stderr:


I0303 13:04:42.711558 140610081924928 utils.py:40] Finished hmmbuild query in 1.043 seconds
I0303 13:04:42.715264 140610081924928 hmmsearch.py:103] Launching sub-process ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmsearch', '--noali', '--cpu', '8', '--F1', '0.1', '--F2', '0.1', '--F3', '0.1', '--incE', '100', '-E', '100', '--domE', '100', '--incdomE', '100', '-A', '/tmp/tmpk_91xfvc/output.sto', '/tmp/tmpk_91xfvc/query.hmm', '/projects/ilfgrid/data/alphafold-genetic-databases///pdb_seqres/pdb_seqres.txt']
I0303 13:04:42.790642 140610081924928 utils.py:36] Started hmmsearch (pdb_seqres.txt) query
I0303 13:04:49.621550 140610081924928 utils.py:40] Finished hmmsearch (pdb_seqres.txt) query in 6.831 seconds
W0303 13:04:52.546169 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/A/bfd_uniref_hits.a3m
I0303 13:04:52.624420 140610081924928 templates.py:940] Searching for template for: MANNASLEQDQNHCSAINNSIPLTQGKLPTLTLSGKIRVTVTFFLFLLSTAFNASFLVKLQRWTQKRKKGKKLSRMKVLLKHLTLANLLETLIVMPLDGMWNITVQWYAGEFLCKVLSYLKLFSMYAPAFMMVVISLDRSLAVTQPLAVQSKSKLERSMTSLAWILSIVFAGPQLYIFRMIYLADGSGPAVFSQCVTHCSFPQWWHEAFYNFFTFSCLFIIPLLIMLICNAKIIFALTRVLHQDPRKLQLNQSKNNIPRARLRTLKMTVAFGTSFVICWTPYYVLGIWYWFDPEMLNRVSEPVNHFFFLFAFLNPCFDPLIYGYFSL
I0303 13:04:53.187830 140610081924928 templates.py:267] Found an exact template match 7br3_A.
I0303 13:04:53.208470 140610081924928 templates.py:267] Found an exact template match 7br3_A.
I0303 13:04:53.731558 140610081924928 templates.py:267] Found an exact template match 7qvm_R.
I0303 13:04:54.287476 140610081924928 templates.py:267] Found an exact template match 7ryc_O.
I0303 13:04:54.880892 140610081924928 templates.py:267] Found an exact template match 7r0c_A.
I0303 13:04:55.505878 140610081924928 templates.py:267] Found an exact template match 7kh0_R.
I0303 13:04:55.877771 140610081924928 templates.py:267] Found an exact template match 6tpk_A.
I0303 13:04:56.749267 140610081924928 templates.py:267] Found an exact template match 7dw9_R.
I0303 13:04:57.272218 140610081924928 templates.py:267] Found an exact template match 7bb6_A.
I0303 13:04:57.792940 140610081924928 templates.py:267] Found an exact template match 7bb7_A.
I0303 13:04:58.648558 140610081924928 templates.py:267] Found an exact template match 7wq3_R.
I0303 13:04:59.189793 140610081924928 templates.py:267] Found an exact template match 7xjk_F.
I0303 13:04:59.737888 140610081924928 templates.py:267] Found an exact template match 7xjl_F.
I0303 13:05:00.287193 140610081924928 templates.py:267] Found an exact template match 7wq4_R.
I0303 13:05:01.164833 140610081924928 templates.py:267] Found an exact template match 7xbd_A.
I0303 13:05:01.604672 140610081924928 templates.py:267] Found an exact template match 7mby_R.
I0303 13:05:01.618454 140610081924928 templates.py:267] Found an exact template match 7mby_R.
I0303 13:05:02.170779 140610081924928 templates.py:267] Found an exact template match 7ezh_D.
I0303 13:05:02.184846 140610081924928 templates.py:267] Found an exact template match 7ezh_D.
I0303 13:05:02.644184 140610081924928 templates.py:267] Found an exact template match 7ezk_D.
I0303 13:05:02.658471 140610081924928 templates.py:267] Found an exact template match 7ezk_D.
I0303 13:05:03.582992 140610081924928 templates.py:267] Found an exact template match 7ezm_D.
I0303 13:05:03.598800 140610081924928 templates.py:267] Found an exact template match 7ezm_D.
I0303 13:05:04.134069 140610081924928 templates.py:267] Found an exact template match 7xou_R.
I0303 13:05:04.148541 140610081924928 templates.py:267] Found an exact template match 7xou_R.
I0303 13:05:04.663144 140610081924928 templates.py:267] Found an exact template match 7xov_R.
I0303 13:05:04.677891 140610081924928 templates.py:267] Found an exact template match 7xov_R.
I0303 13:05:05.208703 140610081924928 templates.py:267] Found an exact template match 7mbx_R.
I0303 13:05:05.223486 140610081924928 templates.py:267] Found an exact template match 7mbx_R.
I0303 13:05:05.769717 140610081924928 templates.py:267] Found an exact template match 7sbf_R.
I0303 13:05:06.221128 140610081924928 templates.py:267] Found an exact template match 7t2g_R.
I0303 13:05:06.424796 140610081924928 templates.py:267] Found an exact template match 7ul4_A.
I0303 13:05:07.488109 140610081924928 templates.py:267] Found an exact template match 6dde_R.
I0303 13:05:07.929531 140610081924928 templates.py:267] Found an exact template match 6ddf_R.
I0303 13:05:08.481551 140610081924928 templates.py:267] Found an exact template match 7scg_D.
I0303 13:05:09.034703 140610081924928 templates.py:267] Found an exact template match 7t2h_D.
I0303 13:05:09.466566 140610081924928 templates.py:267] Found an exact template match 7u2k_D.
I0303 13:05:10.476531 140610081924928 templates.py:267] Found an exact template match 7u2l_D.
I0303 13:05:10.843925 140610081924928 templates.py:267] Found an exact template match 5c1m_A.
I0303 13:05:11.582295 140610081924928 templates.py:267] Found an exact template match 8ef5_M.
I0303 13:05:11.596603 140610081924928 templates.py:267] Found an exact template match 8ef5_R.
I0303 13:05:12.337233 140610081924928 templates.py:267] Found an exact template match 8ef6_M.
I0303 13:05:12.351128 140610081924928 templates.py:267] Found an exact template match 8ef6_R.
I0303 13:05:13.092563 140610081924928 templates.py:267] Found an exact template match 8efl_M.
I0303 13:05:13.106511 140610081924928 templates.py:267] Found an exact template match 8efl_R.
I0303 13:05:14.323538 140610081924928 templates.py:267] Found an exact template match 8efo_M.
I0303 13:05:14.337520 140610081924928 templates.py:267] Found an exact template match 8efo_R.
I0303 13:05:14.789594 140610081924928 templates.py:267] Found an exact template match 8efq_R.
I0303 13:05:15.527371 140610081924928 templates.py:267] Found an exact template match 8f7r_M.
I0303 13:05:15.541937 140610081924928 templates.py:267] Found an exact template match 8f7r_R.
I0303 13:05:16.118937 140610081924928 templates.py:267] Found an exact template match 8f7w_R.
I0303 13:05:17.182482 140610081924928 templates.py:267] Found an exact template match 6b73_A.
I0303 13:05:17.196767 140610081924928 templates.py:267] Found an exact template match 6b73_B.
I0303 13:05:17.761916 140610081924928 templates.py:267] Found an exact template match 8efb_R.
I0303 13:05:18.524798 140610081924928 pipeline.py:234] Uniref90 MSA size: 10000 sequences.
I0303 13:05:18.524987 140610081924928 pipeline.py:235] BFD MSA size: 1485 sequences.
I0303 13:05:18.525043 140610081924928 pipeline.py:236] MGnify MSA size: 501 sequences.
I0303 13:05:18.525098 140610081924928 pipeline.py:237] Final (deduplicated) MSA size: 11617 sequences.
I0303 13:05:18.525470 140610081924928 pipeline.py:239] Total number of templates (NB: this can include bad templates and is later filtered to top 4): 20.
W0303 13:05:18.543458 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/A/uniprot_hits.sto
I0303 13:05:50.409169 140610081924928 pipeline_multimer.py:210] Running monomer pipeline on chain B: GnRH I gtp:1162
W0303 13:05:50.411403 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/B/uniref90_hits.sto
W0303 13:05:50.414754 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/B/mgnify_hits.sto
I0303 13:05:50.416914 140610081924928 hmmbuild.py:121] Launching subprocess ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmbuild', '--hand', '--amino', '/tmp/tmpbzqt97hv/output.hmm', '/tmp/tmpbzqt97hv/query.msa']
I0303 13:05:50.520479 140610081924928 utils.py:36] Started hmmbuild query
I0303 13:05:50.532970 140610081924928 hmmbuild.py:128] hmmbuild stdout:
# hmmbuild :: profile HMM construction from multiple sequence alignments
# HMMER 3.3.2 (Nov 2020); http://hmmer.org/
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# input alignment file:             /tmp/tmpbzqt97hv/query.msa
# output HMM file:                  /tmp/tmpbzqt97hv/output.hmm
# input alignment is asserted as:   protein
# model architecture construction:  hand-specified by RF annotation
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# idx name                  nseq  alen  mlen eff_nseq re/pos description
#---- -------------------- ----- ----- ----- -------- ------ -----------
1     query                    1    10    10     1.00  1.686 

# CPU time: 0.01u 0.00s 00:00:00.01 Elapsed: 00:00:00.01


stderr:


I0303 13:05:50.533133 140610081924928 utils.py:40] Finished hmmbuild query in 0.012 seconds
I0303 13:05:50.534084 140610081924928 hmmsearch.py:103] Launching sub-process ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmsearch', '--noali', '--cpu', '8', '--F1', '0.1', '--F2', '0.1', '--F3', '0.1', '--incE', '100', '-E', '100', '--domE', '100', '--incdomE', '100', '-A', '/tmp/tmpn2fnmoda/output.sto', '/tmp/tmpn2fnmoda/query.hmm', '/projects/ilfgrid/data/alphafold-genetic-databases///pdb_seqres/pdb_seqres.txt']
I0303 13:05:50.657507 140610081924928 utils.py:36] Started hmmsearch (pdb_seqres.txt) query
I0303 13:05:52.247488 140610081924928 utils.py:40] Finished hmmsearch (pdb_seqres.txt) query in 1.590 seconds
W0303 13:05:52.256123 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/B/bfd_uniref_hits.a3m
I0303 13:05:52.258458 140610081924928 templates.py:940] Searching for template for: XHWSYGLRPG
W0303 13:05:52.440996 140610081924928 templates.py:547] The exact sequence QHWSYGLRPG was not found in 1yy1_A. Realigning the template to the actual sequence.
I0303 13:05:52.441176 140610081924928 kalign.py:66] Aligning 2 sequences
I0303 13:05:52.441612 140610081924928 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmp96fi6zw8/input.fasta -o /tmp/tmp96fi6zw8/output.a3m -format fasta"
I0303 13:05:52.538375 140610081924928 utils.py:36] Started Kalign query
I0303 13:05:52.539161 140610081924928 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmp96fi6zw8/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmp96fi6zw8/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:05:52.539257 140610081924928 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:05:52.539826 140610081924928 templates.py:370] Old aligned template: QHWSYGLRPG-
New aligned template: EHWSYGLRPGX
I0303 13:05:52.539928 140610081924928 templates.py:555] Sequence in 1yy1_A: QHWSYGLRPG successfully realigned to EHWSYGLRPGX
W0303 13:05:52.645080 140610081924928 templates.py:547] The exact sequence QHWSYWLRPG was not found in 4d5m_A. Realigning the template to the actual sequence.
I0303 13:05:52.645250 140610081924928 kalign.py:66] Aligning 2 sequences
I0303 13:05:52.645719 140610081924928 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmp7ys_88wx/input.fasta -o /tmp/tmp7ys_88wx/output.a3m -format fasta"
I0303 13:05:52.744031 140610081924928 utils.py:36] Started Kalign query
I0303 13:05:52.744828 140610081924928 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmp7ys_88wx/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmp7ys_88wx/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:05:52.744934 140610081924928 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:05:52.745461 140610081924928 templates.py:370] Old aligned template: QHWSYWLRPG-
New aligned template: EHWSYWLRPGX
I0303 13:05:52.745567 140610081924928 templates.py:555] Sequence in 4d5m_A: QHWSYWLRPG successfully realigned to EHWSYWLRPGX
W0303 13:05:52.747502 140610081924928 templates.py:547] The exact sequence QHWSYWLRPG was not found in 4d5m_B. Realigning the template to the actual sequence.
I0303 13:05:52.747588 140610081924928 kalign.py:66] Aligning 2 sequences
I0303 13:05:52.747923 140610081924928 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpjtyf6hy9/input.fasta -o /tmp/tmpjtyf6hy9/output.a3m -format fasta"
I0303 13:05:52.847100 140610081924928 utils.py:36] Started Kalign query
I0303 13:05:52.847863 140610081924928 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpjtyf6hy9/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpjtyf6hy9/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:05:52.847979 140610081924928 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:05:52.848500 140610081924928 templates.py:370] Old aligned template: QHWSYWLRPG-
New aligned template: EHWSYWLRPGX
I0303 13:05:52.848603 140610081924928 templates.py:555] Sequence in 4d5m_B: QHWSYWLRPG successfully realigned to EHWSYWLRPGX
W0303 13:05:52.850463 140610081924928 templates.py:547] The exact sequence QHWSYWLRPG was not found in 4d5m_C. Realigning the template to the actual sequence.
I0303 13:05:52.850548 140610081924928 kalign.py:66] Aligning 2 sequences
I0303 13:05:52.850875 140610081924928 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmp2j2vrel0/input.fasta -o /tmp/tmp2j2vrel0/output.a3m -format fasta"
I0303 13:05:52.948724 140610081924928 utils.py:36] Started Kalign query
I0303 13:05:52.949513 140610081924928 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmp2j2vrel0/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmp2j2vrel0/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:05:52.949615 140610081924928 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:05:52.950193 140610081924928 templates.py:370] Old aligned template: QHWSYWLRPG-
New aligned template: EHWSYWLRPGX
I0303 13:05:52.950291 140610081924928 templates.py:555] Sequence in 4d5m_C: QHWSYWLRPG successfully realigned to EHWSYWLRPGX
W0303 13:05:52.952136 140610081924928 templates.py:547] The exact sequence QHWSYWLRPG was not found in 4d5m_D. Realigning the template to the actual sequence.
I0303 13:05:52.952226 140610081924928 kalign.py:66] Aligning 2 sequences
I0303 13:05:52.952559 140610081924928 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmphqudbro6/input.fasta -o /tmp/tmphqudbro6/output.a3m -format fasta"
I0303 13:05:53.051614 140610081924928 utils.py:36] Started Kalign query
I0303 13:05:53.052490 140610081924928 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmphqudbro6/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmphqudbro6/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:05:53.052590 140610081924928 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:05:53.053097 140610081924928 templates.py:370] Old aligned template: QHWSYWLRPG-
New aligned template: EHWSYWLRPGX
I0303 13:05:53.053211 140610081924928 templates.py:555] Sequence in 4d5m_D: QHWSYWLRPG successfully realigned to EHWSYWLRPGX
I0303 13:05:53.055043 140610081924928 templates.py:718] hit 1yy2_A did not pass prefilter: Template too short. Length: 9.
I0303 13:05:53.055181 140610081924928 templates.py:718] hit 2pgw_A did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055270 140610081924928 templates.py:718] hit 2pgw_B did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055360 140610081924928 templates.py:718] hit 2pgw_C did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055444 140610081924928 templates.py:718] hit 2pgw_D did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055518 140610081924928 templates.py:718] hit 2pgw_E did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055590 140610081924928 templates.py:718] hit 2pgw_F did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055660 140610081924928 templates.py:718] hit 2pgw_G did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055745 140610081924928 templates.py:718] hit 2pgw_H did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055809 140610081924928 templates.py:718] hit 3zzw_A did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.055872 140610081924928 templates.py:718] hit 3zzw_A did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.055936 140610081924928 templates.py:718] hit 3zzw_A did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.055998 140610081924928 templates.py:718] hit 3zzw_B did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.056063 140610081924928 templates.py:718] hit 3zzw_B did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.056126 140610081924928 templates.py:718] hit 3zzw_B did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.056192 140610081924928 templates.py:718] hit 4gt4_A did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.056256 140610081924928 templates.py:718] hit 4gt4_A did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.056318 140610081924928 templates.py:718] hit 4gt4_A did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.056411 140610081924928 templates.py:718] hit 4gt4_B did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.056481 140610081924928 templates.py:718] hit 4gt4_B did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.056550 140610081924928 templates.py:718] hit 4gt4_B did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.056623 140610081924928 templates.py:718] hit 5ua4_B did not pass prefilter: Template too short. Length: 7.
I0303 13:05:53.056728 140610081924928 templates.py:718] hit 6cv6_A did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.056790 140610081924928 templates.py:718] hit 6cv6_B did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.056859 140610081924928 templates.py:718] hit 6cv6_C did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.056923 140610081924928 templates.py:718] hit 6cv6_D did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.056986 140610081924928 templates.py:718] hit 6cv6_E did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057048 140610081924928 templates.py:718] hit 6cv6_F did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057110 140610081924928 templates.py:718] hit 6cv6_G did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057173 140610081924928 templates.py:718] hit 6cv6_H did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057236 140610081924928 templates.py:718] hit 6cv6_I did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057299 140610081924928 templates.py:718] hit 6cv6_J did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057389 140610081924928 templates.py:718] hit 6cv6_K did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057462 140610081924928 templates.py:718] hit 6cv6_L did not pass prefilter: Template too short. Length: 8.
I0303 13:05:53.057538 140610081924928 templates.py:718] hit 2g8s_A did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.057610 140610081924928 templates.py:718] hit 2g8s_A did not pass prefilter: Template too short. Length: 6.
I0303 13:05:53.057710 140610081924928 templates.py:718] hit 2g8s_B did not pass prefilter: Template too short. Length: 5.
I0303 13:05:53.057775 140610081924928 templates.py:718] hit 2g8s_B did not pass prefilter: Template too short. Length: 6.
I0303 13:05:53.058590 140610081924928 pipeline.py:234] Uniref90 MSA size: 1 sequences.
I0303 13:05:53.058724 140610081924928 pipeline.py:235] BFD MSA size: 28 sequences.
I0303 13:05:53.058793 140610081924928 pipeline.py:236] MGnify MSA size: 1 sequences.
I0303 13:05:53.058852 140610081924928 pipeline.py:237] Final (deduplicated) MSA size: 28 sequences.
I0303 13:05:53.058907 140610081924928 pipeline.py:239] Total number of templates (NB: this can include bad templates and is later filtered to top 4): 2.
W0303 13:05:53.060415 140610081924928 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gnrhr_rat/1162/gnrhr_rat-1162/msas/B/uniprot_hits.sto
I0303 13:05:53.564007 140610081924928 run_alphafold.py:191] Running model model_1_multimer_v3_pred_0 on gnrhr_rat-1162
I0303 13:05:53.565523 140610081924928 model.py:165] Running predict with shape(feat) = {'aatype': (337,), 'residue_index': (337,), 'seq_length': (), 'msa': (2075, 337), 'num_alignments': (), 'template_aatype': (4, 337), 'template_all_atom_mask': (4, 337, 37), 'template_all_atom_positions': (4, 337, 37, 3), 'asym_id': (337,), 'sym_id': (337,), 'entity_id': (337,), 'deletion_matrix': (2075, 337), 'deletion_mean': (337,), 'all_atom_mask': (337, 37), 'all_atom_positions': (337, 37, 3), 'assembly_num_chains': (), 'entity_mask': (337,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 337), 'seq_mask': (337,), 'msa_mask': (2075, 337)}
I0303 13:11:36.488935 140610081924928 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (337, 337, 64)}, 'experimentally_resolved': {'logits': (337, 37)}, 'masked_msa': {'logits': (508, 337, 22)}, 'num_recycles': (), 'predicted_aligned_error': (337, 337), 'predicted_lddt': {'logits': (337, 50)}, 'structure_module': {'final_atom_mask': (337, 37), 'final_atom_positions': (337, 37, 3)}, 'plddt': (337,), 'aligned_confidence_probs': (337, 337, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 13:11:36.490145 140610081924928 run_alphafold.py:203] Total JAX model model_1_multimer_v3_pred_0 on gnrhr_rat-1162 predict time (includes compilation time, see --benchmark): 342.9s
I0303 13:11:46.326765 140610081924928 run_alphafold.py:191] Running model model_2_multimer_v3_pred_0 on gnrhr_rat-1162
I0303 13:11:46.327106 140610081924928 model.py:165] Running predict with shape(feat) = {'aatype': (337,), 'residue_index': (337,), 'seq_length': (), 'msa': (2075, 337), 'num_alignments': (), 'template_aatype': (4, 337), 'template_all_atom_mask': (4, 337, 37), 'template_all_atom_positions': (4, 337, 37, 3), 'asym_id': (337,), 'sym_id': (337,), 'entity_id': (337,), 'deletion_matrix': (2075, 337), 'deletion_mean': (337,), 'all_atom_mask': (337, 37), 'all_atom_positions': (337, 37, 3), 'assembly_num_chains': (), 'entity_mask': (337,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 337), 'seq_mask': (337,), 'msa_mask': (2075, 337)}
I0303 13:17:20.899240 140610081924928 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (337, 337, 64)}, 'experimentally_resolved': {'logits': (337, 37)}, 'masked_msa': {'logits': (508, 337, 22)}, 'num_recycles': (), 'predicted_aligned_error': (337, 337), 'predicted_lddt': {'logits': (337, 50)}, 'structure_module': {'final_atom_mask': (337, 37), 'final_atom_positions': (337, 37, 3)}, 'plddt': (337,), 'aligned_confidence_probs': (337, 337, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 13:17:20.900774 140610081924928 run_alphafold.py:203] Total JAX model model_2_multimer_v3_pred_0 on gnrhr_rat-1162 predict time (includes compilation time, see --benchmark): 334.6s
I0303 13:17:30.093124 140610081924928 run_alphafold.py:191] Running model model_3_multimer_v3_pred_0 on gnrhr_rat-1162
I0303 13:17:30.093483 140610081924928 model.py:165] Running predict with shape(feat) = {'aatype': (337,), 'residue_index': (337,), 'seq_length': (), 'msa': (2075, 337), 'num_alignments': (), 'template_aatype': (4, 337), 'template_all_atom_mask': (4, 337, 37), 'template_all_atom_positions': (4, 337, 37, 3), 'asym_id': (337,), 'sym_id': (337,), 'entity_id': (337,), 'deletion_matrix': (2075, 337), 'deletion_mean': (337,), 'all_atom_mask': (337, 37), 'all_atom_positions': (337, 37, 3), 'assembly_num_chains': (), 'entity_mask': (337,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 337), 'seq_mask': (337,), 'msa_mask': (2075, 337)}
I0303 13:24:14.336663 140610081924928 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (337, 337, 64)}, 'experimentally_resolved': {'logits': (337, 37)}, 'masked_msa': {'logits': (508, 337, 22)}, 'num_recycles': (), 'predicted_aligned_error': (337, 337), 'predicted_lddt': {'logits': (337, 50)}, 'structure_module': {'final_atom_mask': (337, 37), 'final_atom_positions': (337, 37, 3)}, 'plddt': (337,), 'aligned_confidence_probs': (337, 337, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 13:24:14.338310 140610081924928 run_alphafold.py:203] Total JAX model model_3_multimer_v3_pred_0 on gnrhr_rat-1162 predict time (includes compilation time, see --benchmark): 404.2s
I0303 13:24:24.679799 140610081924928 run_alphafold.py:191] Running model model_4_multimer_v3_pred_0 on gnrhr_rat-1162
I0303 13:24:24.680433 140610081924928 model.py:165] Running predict with shape(feat) = {'aatype': (337,), 'residue_index': (337,), 'seq_length': (), 'msa': (2075, 337), 'num_alignments': (), 'template_aatype': (4, 337), 'template_all_atom_mask': (4, 337, 37), 'template_all_atom_positions': (4, 337, 37, 3), 'asym_id': (337,), 'sym_id': (337,), 'entity_id': (337,), 'deletion_matrix': (2075, 337), 'deletion_mean': (337,), 'all_atom_mask': (337, 37), 'all_atom_positions': (337, 37, 3), 'assembly_num_chains': (), 'entity_mask': (337,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 337), 'seq_mask': (337,), 'msa_mask': (2075, 337)}
I0303 13:32:07.884244 140610081924928 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (337, 337, 64)}, 'experimentally_resolved': {'logits': (337, 37)}, 'masked_msa': {'logits': (508, 337, 22)}, 'num_recycles': (), 'predicted_aligned_error': (337, 337), 'predicted_lddt': {'logits': (337, 50)}, 'structure_module': {'final_atom_mask': (337, 37), 'final_atom_positions': (337, 37, 3)}, 'plddt': (337,), 'aligned_confidence_probs': (337, 337, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 13:32:07.886307 140610081924928 run_alphafold.py:203] Total JAX model model_4_multimer_v3_pred_0 on gnrhr_rat-1162 predict time (includes compilation time, see --benchmark): 463.2s
I0303 13:32:17.913373 140610081924928 run_alphafold.py:191] Running model model_5_multimer_v3_pred_0 on gnrhr_rat-1162
I0303 13:32:17.913786 140610081924928 model.py:165] Running predict with shape(feat) = {'aatype': (337,), 'residue_index': (337,), 'seq_length': (), 'msa': (2075, 337), 'num_alignments': (), 'template_aatype': (4, 337), 'template_all_atom_mask': (4, 337, 37), 'template_all_atom_positions': (4, 337, 37, 3), 'asym_id': (337,), 'sym_id': (337,), 'entity_id': (337,), 'deletion_matrix': (2075, 337), 'deletion_mean': (337,), 'all_atom_mask': (337, 37), 'all_atom_positions': (337, 37, 3), 'assembly_num_chains': (), 'entity_mask': (337,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 337), 'seq_mask': (337,), 'msa_mask': (2075, 337)}
I0303 13:38:17.925415 140610081924928 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (337, 337, 64)}, 'experimentally_resolved': {'logits': (337, 37)}, 'masked_msa': {'logits': (508, 337, 22)}, 'num_recycles': (), 'predicted_aligned_error': (337, 337), 'predicted_lddt': {'logits': (337, 50)}, 'structure_module': {'final_atom_mask': (337, 37), 'final_atom_positions': (337, 37, 3)}, 'plddt': (337,), 'aligned_confidence_probs': (337, 337, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 13:38:17.927022 140610081924928 run_alphafold.py:203] Total JAX model model_5_multimer_v3_pred_0 on gnrhr_rat-1162 predict time (includes compilation time, see --benchmark): 360.0s
I0303 13:38:27.507911 140610081924928 run_alphafold.py:277] Final timings for gnrhr_rat-1162: {'features': 78.80742526054382, 'process_features_model_1_multimer_v3_pred_0': 3.838539123535156e-05, 'predict_and_compile_model_1_multimer_v3_pred_0': 342.9258768558502, 'process_features_model_2_multimer_v3_pred_0': 1.2159347534179688e-05, 'predict_and_compile_model_2_multimer_v3_pred_0': 334.5737843513489, 'process_features_model_3_multimer_v3_pred_0': 8.58306884765625e-06, 'predict_and_compile_model_3_multimer_v3_pred_0': 404.2449758052826, 'process_features_model_4_multimer_v3_pred_0': 3.170967102050781e-05, 'predict_and_compile_model_4_multimer_v3_pred_0': 463.2061302661896, 'process_features_model_5_multimer_v3_pred_0': 9.059906005859375e-06, 'predict_and_compile_model_5_multimer_v3_pred_0': 360.0133993625641}

>> Job finished at: Fri Mar  3 13:38:34 CET 2023

>> Runtime: 2053 s
