>> Job started at: Fri Mar  3 13:38:34 CET 2023
   On Machine:     ilfgridgpun02fl.unicph.domain
   In directory:   /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579

>> GPU is 0

Loaded miniconda shell environment for bash
I0303 13:38:42.953073 140497557509952 templates.py:857] Using precomputed obsolete pdbs /projects/ilfgrid/data/alphafold-genetic-databases///pdb_mmcif/obsolete.dat.
I0303 13:38:43.187211 140497557509952 xla_bridge.py:353] Unable to initialize backend 'tpu_driver': NOT_FOUND: Unable to find driver in registry given worker: 
I0303 13:38:43.495516 140497557509952 xla_bridge.py:353] Unable to initialize backend 'rocm': NOT_FOUND: Could not find registered platform with name: "rocm". Available platform names are: CUDA Interpreter Host
I0303 13:38:43.495965 140497557509952 xla_bridge.py:353] Unable to initialize backend 'tpu': module 'jaxlib.xla_extension' has no attribute 'get_tpu_client'
I0303 13:38:43.496093 140497557509952 xla_bridge.py:353] Unable to initialize backend 'plugin': xla_extension has no attributes named get_plugin_device_client. Compile TensorFlow with //tensorflow/compiler/xla/python:enable_plugin_device set to true (defaults to false) to enable this.
I0303 13:38:48.025704 140497557509952 run_alphafold.py:386] Have 5 models: ['model_1_multimer_v3_pred_0', 'model_2_multimer_v3_pred_0', 'model_3_multimer_v3_pred_0', 'model_4_multimer_v3_pred_0', 'model_5_multimer_v3_pred_0']
I0303 13:38:48.026750 140497557509952 run_alphafold.py:403] Using random seed 255012434955779967 for the data pipeline
I0303 13:38:48.027035 140497557509952 run_alphafold.py:161] Predicting gpr39_human-1579
I0303 13:38:48.038646 140497557509952 pipeline_multimer.py:210] Running monomer pipeline on chain A: gpr39_human O43194
W0303 13:38:48.040041 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/A/uniref90_hits.sto
W0303 13:38:50.826639 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/A/mgnify_hits.sto
I0303 13:38:56.111852 140497557509952 hmmbuild.py:121] Launching subprocess ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmbuild', '--hand', '--amino', '/tmp/tmp5mi0oka6/output.hmm', '/tmp/tmp5mi0oka6/query.msa']
I0303 13:38:56.198742 140497557509952 utils.py:36] Started hmmbuild query
I0303 13:38:57.571448 140497557509952 hmmbuild.py:128] hmmbuild stdout:
# hmmbuild :: profile HMM construction from multiple sequence alignments
# HMMER 3.3.2 (Nov 2020); http://hmmer.org/
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# input alignment file:             /tmp/tmp5mi0oka6/query.msa
# output HMM file:                  /tmp/tmp5mi0oka6/output.hmm
# input alignment is asserted as:   protein
# model architecture construction:  hand-specified by RF annotation
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# idx name                  nseq  alen  mlen eff_nseq re/pos description
#---- -------------------- ----- ----- ----- -------- ------ -----------
1     query                 9679  2205   453    13.32  0.590 

# CPU time: 1.30u 0.06s 00:00:01.36 Elapsed: 00:00:01.36


stderr:


I0303 13:38:57.571677 140497557509952 utils.py:40] Finished hmmbuild query in 1.373 seconds
I0303 13:38:57.576388 140497557509952 hmmsearch.py:103] Launching sub-process ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmsearch', '--noali', '--cpu', '8', '--F1', '0.1', '--F2', '0.1', '--F3', '0.1', '--incE', '100', '-E', '100', '--domE', '100', '--incdomE', '100', '-A', '/tmp/tmpfvf0s3rm/output.sto', '/tmp/tmpfvf0s3rm/query.hmm', '/projects/ilfgrid/data/alphafold-genetic-databases///pdb_seqres/pdb_seqres.txt']
I0303 13:38:57.663898 140497557509952 utils.py:36] Started hmmsearch (pdb_seqres.txt) query
I0303 13:39:12.847458 140497557509952 utils.py:40] Finished hmmsearch (pdb_seqres.txt) query in 15.183 seconds
W0303 13:39:16.510205 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/A/bfd_uniref_hits.a3m
I0303 13:39:16.675848 140497557509952 templates.py:940] Searching for template for: MASPSLPGSDCSQIIDHSHVPEFEVATWIKITLILVYLIIFVMGLLGNSATIRVTQVLQKKGYLQKEVTDHMVSLACSDILVFLIGMPMEFYSIIWNPLTTSSYTLSCKLHTFLFEACSYATLLHVLTLSFERYIAICHPFRYKAVSGPCQVKLLIGFVWVTSALVALPLLFAMGTEYPLVNVPSHRGLTCNRSSTRHHEQPETSNMSICTNLSSRWTVFQSSIFGAFVVYLVVLLSVAFMCWNMMQVLMKSQKGSLAGGTRPPQLRKSESEESRTARRQTIIFLRLIVVTLAVCWMPNQIRRIMAAAKPKHDWTRSYFRAYMILLPFSETFFYLSSVINPLLYTVSSQQFRRVFVQVLCCRLSLQHANHEKRLRVHAHSTTDSARFVQRPLLFASRRQSSARRTEKIFLSTFQSEAEPQSKSQSLSLESLEPNSGAKPANSAAENGFQEHEV
I0303 13:39:17.314060 140497557509952 templates.py:267] Found an exact template match 4xee_A.
I0303 13:39:17.727363 140497557509952 templates.py:267] Found an exact template match 4xes_A.
I0303 13:39:18.176395 140497557509952 templates.py:267] Found an exact template match 6pwc_R.
I0303 13:39:19.027107 140497557509952 templates.py:267] Found an exact template match 6os9_R.
I0303 13:39:19.584763 140497557509952 templates.py:267] Found an exact template match 6osa_R.
I0303 13:39:20.980978 140497557509952 templates.py:267] Found an exact template match 7w53_R.
I0303 13:39:22.110932 140497557509952 templates.py:267] Found an exact template match 7w56_R.
I0303 13:39:23.612441 140497557509952 templates.py:267] Found an exact template match 7w55_R.
I0303 13:39:24.755159 140497557509952 templates.py:267] Found an exact template match 7w57_R.
I0303 13:39:25.042034 140497557509952 templates.py:267] Found an exact template match 7ul2_R.
I0303 13:39:25.450710 140497557509952 templates.py:267] Found an exact template match 5t04_A.
I0303 13:39:25.474460 140497557509952 templates.py:267] Found an exact template match 5t04_A.
I0303 13:39:25.868560 140497557509952 templates.py:267] Found an exact template match 6up7_R.
I0303 13:39:26.750911 140497557509952 templates.py:267] Found an exact template match 7l0p_C.
I0303 13:39:27.269577 140497557509952 templates.py:267] Found an exact template match 7l0q_C.
I0303 13:39:27.729139 140497557509952 templates.py:267] Found an exact template match 7l0r_C.
I0303 13:39:28.259213 140497557509952 templates.py:267] Found an exact template match 7l0s_C.
I0303 13:39:28.516256 140497557509952 templates.py:267] Found an exact template match 4grv_A.
I0303 13:39:28.538793 140497557509952 templates.py:267] Found an exact template match 4grv_A.
I0303 13:39:28.878197 140497557509952 templates.py:267] Found an exact template match 4bwb_A.
I0303 13:39:28.894557 140497557509952 templates.py:267] Found an exact template match 4bwb_B.
I0303 13:39:29.941999 140497557509952 templates.py:267] Found an exact template match 3zev_A.
I0303 13:39:29.958311 140497557509952 templates.py:267] Found an exact template match 3zev_B.
I0303 13:39:30.495601 140497557509952 templates.py:267] Found an exact template match 4buo_A.
I0303 13:39:30.511937 140497557509952 templates.py:267] Found an exact template match 4buo_B.
I0303 13:39:31.023563 140497557509952 templates.py:267] Found an exact template match 4bv0_A.
I0303 13:39:31.040488 140497557509952 templates.py:267] Found an exact template match 4bv0_B.
I0303 13:39:31.707880 140497557509952 templates.py:267] Found an exact template match 7f9y_R.
I0303 13:39:32.523310 140497557509952 templates.py:267] Found an exact template match 7f9z_R.
I0303 13:39:33.132254 140497557509952 templates.py:267] Found an exact template match 7w2z_R.
I0303 13:39:34.355189 140497557509952 templates.py:267] Found an exact template match 7na8_R.
I0303 13:39:35.571046 140497557509952 pipeline.py:234] Uniref90 MSA size: 10000 sequences.
I0303 13:39:35.571226 140497557509952 pipeline.py:235] BFD MSA size: 2368 sequences.
I0303 13:39:35.571289 140497557509952 pipeline.py:236] MGnify MSA size: 501 sequences.
I0303 13:39:35.571354 140497557509952 pipeline.py:237] Final (deduplicated) MSA size: 12530 sequences.
I0303 13:39:35.571635 140497557509952 pipeline.py:239] Total number of templates (NB: this can include bad templates and is later filtered to top 4): 20.
W0303 13:39:35.604134 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/A/uniprot_hits.sto
I0303 13:40:20.429093 140497557509952 pipeline_multimer.py:210] Running monomer pipeline on chain B: neurotensin gtp:1579
W0303 13:40:20.431147 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/B/uniref90_hits.sto
W0303 13:40:20.434726 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/B/mgnify_hits.sto
I0303 13:40:20.437128 140497557509952 hmmbuild.py:121] Launching subprocess ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmbuild', '--hand', '--amino', '/tmp/tmpk4yg7w84/output.hmm', '/tmp/tmpk4yg7w84/query.msa']
I0303 13:40:20.565995 140497557509952 utils.py:36] Started hmmbuild query
I0303 13:40:20.578320 140497557509952 hmmbuild.py:128] hmmbuild stdout:
# hmmbuild :: profile HMM construction from multiple sequence alignments
# HMMER 3.3.2 (Nov 2020); http://hmmer.org/
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# input alignment file:             /tmp/tmpk4yg7w84/query.msa
# output HMM file:                  /tmp/tmpk4yg7w84/output.hmm
# input alignment is asserted as:   protein
# model architecture construction:  hand-specified by RF annotation
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# idx name                  nseq  alen  mlen eff_nseq re/pos description
#---- -------------------- ----- ----- ----- -------- ------ -----------
1     query                    1    13    13     1.00  1.434 

# CPU time: 0.00u 0.00s 00:00:00.00 Elapsed: 00:00:00.01


stderr:


I0303 13:40:20.578566 140497557509952 utils.py:40] Finished hmmbuild query in 0.012 seconds
I0303 13:40:20.579463 140497557509952 hmmsearch.py:103] Launching sub-process ['/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/hmmsearch', '--noali', '--cpu', '8', '--F1', '0.1', '--F2', '0.1', '--F3', '0.1', '--incE', '100', '-E', '100', '--domE', '100', '--incdomE', '100', '-A', '/tmp/tmpf5jan7t7/output.sto', '/tmp/tmpf5jan7t7/query.hmm', '/projects/ilfgrid/data/alphafold-genetic-databases///pdb_seqres/pdb_seqres.txt']
I0303 13:40:20.691987 140497557509952 utils.py:36] Started hmmsearch (pdb_seqres.txt) query
I0303 13:40:22.228094 140497557509952 utils.py:40] Finished hmmsearch (pdb_seqres.txt) query in 1.536 seconds
W0303 13:40:22.239119 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/B/bfd_uniref_hits.a3m
I0303 13:40:22.248355 140497557509952 templates.py:940] Searching for template for: XLYENKPRRPYIL
W0303 13:40:23.226663 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 2lyw_B. Realigning the template to the actual sequence.
I0303 13:40:23.226922 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:23.227342 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpexaneyt2/input.fasta -o /tmp/tmpexaneyt2/output.a3m -format fasta"
I0303 13:40:23.337718 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:23.338477 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpexaneyt2/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpexaneyt2/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:23.338576 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:23.339117 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:23.339220 140497557509952 templates.py:555] Sequence in 2lyw_B: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:23.554429 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 2oyv_A. Realigning the template to the actual sequence.
I0303 13:40:23.554708 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:23.555211 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmped1qql8k/input.fasta -o /tmp/tmped1qql8k/output.a3m -format fasta"
I0303 13:40:23.676232 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:23.677253 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmped1qql8k/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmped1qql8k/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:23.677373 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:23.677998 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:23.678102 140497557509952 templates.py:555] Sequence in 2oyv_A: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:23.888053 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 2oyw_A. Realigning the template to the actual sequence.
I0303 13:40:23.888259 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:23.888700 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmputkost7v/input.fasta -o /tmp/tmputkost7v/output.a3m -format fasta"
I0303 13:40:24.010389 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:24.011147 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmputkost7v/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmputkost7v/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:24.011245 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:24.011855 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:24.011962 140497557509952 templates.py:555] Sequence in 2oyw_A: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:24.413126 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 3f6k_N. Realigning the template to the actual sequence.
I0303 13:40:24.413288 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:24.413743 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpqq70j0pu/input.fasta -o /tmp/tmpqq70j0pu/output.a3m -format fasta"
I0303 13:40:24.549788 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:24.550590 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpqq70j0pu/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpqq70j0pu/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:24.550720 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:24.551197 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:24.551308 140497557509952 templates.py:555] Sequence in 3f6k_N: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:25.106977 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 4po7_N. Realigning the template to the actual sequence.
I0303 13:40:25.107287 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:25.107865 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpcr_bzcxo/input.fasta -o /tmp/tmpcr_bzcxo/output.a3m -format fasta"
I0303 13:40:25.230700 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:25.231516 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpcr_bzcxo/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpcr_bzcxo/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:25.231613 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:25.232166 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:25.232273 140497557509952 templates.py:555] Sequence in 4po7_N: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:25.234065 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 4po7_P. Realigning the template to the actual sequence.
I0303 13:40:25.234147 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:25.234472 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpct3go5w9/input.fasta -o /tmp/tmpct3go5w9/output.a3m -format fasta"
I0303 13:40:25.367544 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:25.368354 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpct3go5w9/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpct3go5w9/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:25.368455 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:25.368974 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:25.369078 140497557509952 templates.py:555] Sequence in 4po7_P: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:26.447808 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_C. Realigning the template to the actual sequence.
I0303 13:40:26.448020 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:26.448463 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpfh_e1vym/input.fasta -o /tmp/tmpfh_e1vym/output.a3m -format fasta"
I0303 13:40:26.567390 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:26.568118 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpfh_e1vym/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpfh_e1vym/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:26.568206 140497557509952 utils.py:40] Finished Kalign query in 0.000 seconds
I0303 13:40:26.568799 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:26.568907 140497557509952 templates.py:555] Sequence in 5luz_C: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:26.570417 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_D. Realigning the template to the actual sequence.
I0303 13:40:26.570503 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:26.570819 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmpmrrpqu5c/input.fasta -o /tmp/tmpmrrpqu5c/output.a3m -format fasta"
I0303 13:40:26.695584 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:26.696304 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmpmrrpqu5c/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmpmrrpqu5c/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:26.696406 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:26.696906 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:26.697013 140497557509952 templates.py:555] Sequence in 5luz_D: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:26.698480 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_P. Realigning the template to the actual sequence.
I0303 13:40:26.698566 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:26.698875 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmp33jw_zty/input.fasta -o /tmp/tmp33jw_zty/output.a3m -format fasta"
I0303 13:40:26.822324 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:26.823119 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmp33jw_zty/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmp33jw_zty/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:26.823209 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:26.823775 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:26.823883 140497557509952 templates.py:555] Sequence in 5luz_P: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
W0303 13:40:26.825219 140497557509952 templates.py:547] The exact sequence QLYENKPRRPYIL was not found in 5luz_Q. Realigning the template to the actual sequence.
I0303 13:40:26.825303 140497557509952 kalign.py:66] Aligning 2 sequences
I0303 13:40:26.825660 140497557509952 kalign.py:87] Launching subprocess "/projects/ilfgrid/apps/alphafold-2.3.1/AF_2.3.1_conda_env/bin/kalign -i /tmp/tmper1qku7z/input.fasta -o /tmp/tmper1qku7z/output.a3m -format fasta"
I0303 13:40:26.949832 140497557509952 utils.py:36] Started Kalign query
I0303 13:40:26.950793 140497557509952 kalign.py:94] Kalign stdout:


stderr:

Kalign version 2.04, Copyright (C) 2004, 2005, 2006 Timo Lassmann

        Kalign is free software. You can redistribute it and/or modify
        it under the terms of the GNU General Public License as
        published by the Free Software Foundation.

reading from STDIN: found 0 sequences
reading from /tmp/tmper1qku7z/input.fasta: found 2 sequences
Aligning 2 protein sequences with these parameters:
        54.94940948	gap open penalty
        8.52492046	gap extension
        4.42409992	terminal gap penalty
        0.20000000	bonus
Alignment will be written to file:'/tmp/tmper1qku7z/output.a3m'.

Distance Calculation:
     100 percent done
Alignment:
       0 percent done     100 percent done


I0303 13:40:26.950885 140497557509952 utils.py:40] Finished Kalign query in 0.001 seconds
I0303 13:40:26.951429 140497557509952 templates.py:370] Old aligned template: QLYENKPRRPYIL
New aligned template: ELYENKPRRPYIL
I0303 13:40:26.951565 140497557509952 templates.py:555] Sequence in 5luz_Q: QLYENKPRRPYIL successfully realigned to ELYENKPRRPYIL
I0303 13:40:27.506183 140497557509952 templates.py:267] Found an exact template match 2lne_A.
I0303 13:40:28.639169 140497557509952 templates.py:267] Found an exact template match 2lnf_A.
I0303 13:40:29.145915 140497557509952 templates.py:267] Found an exact template match 2lng_A.
I0303 13:40:29.147542 140497557509952 templates.py:718] hit 3zev_C did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.147655 140497557509952 templates.py:718] hit 3zev_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.147741 140497557509952 templates.py:718] hit 6yvr_CCC did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.147828 140497557509952 templates.py:718] hit 6yvr_DDD did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.147900 140497557509952 templates.py:718] hit 4grv_B did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.147968 140497557509952 templates.py:718] hit 4xee_B did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148044 140497557509952 templates.py:718] hit 4xes_B did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148111 140497557509952 templates.py:718] hit 5t04_B did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148179 140497557509952 templates.py:718] hit 6pwc_B did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148248 140497557509952 templates.py:718] hit 6up7_C did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148314 140497557509952 templates.py:718] hit 6z4v_BBB did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148388 140497557509952 templates.py:718] hit 4buo_C did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148454 140497557509952 templates.py:718] hit 4buo_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148519 140497557509952 templates.py:718] hit 4bv0_C did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148583 140497557509952 templates.py:718] hit 4bv0_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148656 140497557509952 templates.py:718] hit 4bwb_C did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148721 140497557509952 templates.py:718] hit 4bwb_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148786 140497557509952 templates.py:718] hit 7l0p_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148851 140497557509952 templates.py:718] hit 7l0q_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148916 140497557509952 templates.py:718] hit 7l0r_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.148980 140497557509952 templates.py:718] hit 7l0s_D did not pass prefilter: Template too short. Length: 6.
I0303 13:40:29.149046 140497557509952 templates.py:718] hit 1g0y_R did not pass prefilter: Template too short. Length: 5.
I0303 13:40:29.319954 140497557509952 templates.py:267] Found an exact template match 1g0y_R.
I0303 13:40:29.335353 140497557509952 templates.py:718] hit 1itb_B did not pass prefilter: Template too short. Length: 5.
I0303 13:40:29.618393 140497557509952 templates.py:267] Found an exact template match 1itb_B.
I0303 13:40:29.635709 140497557509952 templates.py:718] hit 1ira_Y did not pass prefilter: Template too short. Length: 5.
I0303 13:40:29.890705 140497557509952 templates.py:267] Found an exact template match 1ira_Y.
I0303 13:40:29.908707 140497557509952 templates.py:718] hit 4gaf_B did not pass prefilter: Template too short. Length: 5.
I0303 13:40:30.339176 140497557509952 templates.py:267] Found an exact template match 4gaf_B.
I0303 13:40:30.356541 140497557509952 templates.py:718] hit 4dep_B did not pass prefilter: Template too short. Length: 5.
I0303 13:40:31.546222 140497557509952 templates.py:267] Found an exact template match 4dep_B.
I0303 13:40:31.560726 140497557509952 templates.py:718] hit 4dep_E did not pass prefilter: Template too short. Length: 5.
I0303 13:40:31.560892 140497557509952 templates.py:267] Found an exact template match 4dep_E.
I0303 13:40:31.576361 140497557509952 templates.py:718] hit 4v3p_SC did not pass prefilter: Template too short. Length: 7.
I0303 13:40:31.576462 140497557509952 templates.py:718] hit 4v3p_SC did not pass prefilter: Template too short. Length: 8.
I0303 13:40:31.576549 140497557509952 templates.py:718] hit 4v7e_BJ did not pass prefilter: Template too short. Length: 7.
I0303 13:40:31.576624 140497557509952 templates.py:718] hit 4v7e_BJ did not pass prefilter: Template too short. Length: 8.
I0303 13:40:31.576700 140497557509952 templates.py:718] hit 7qix_Q did not pass prefilter: Template too short. Length: 6.
I0303 13:40:31.576781 140497557509952 templates.py:718] hit 7qix_Q did not pass prefilter: Template too short. Length: 8.
I0303 13:40:31.576850 140497557509952 templates.py:718] hit 7qiz_GA did not pass prefilter: Template too short. Length: 6.
I0303 13:40:31.576916 140497557509952 templates.py:718] hit 7qiz_GA did not pass prefilter: Template too short. Length: 8.
I0303 13:40:31.576982 140497557509952 templates.py:718] hit 1yfn_A did not pass prefilter: Template too short. Length: 7.
I0303 13:40:31.577048 140497557509952 templates.py:718] hit 1yfn_B did not pass prefilter: Template too short. Length: 7.
I0303 13:40:31.577113 140497557509952 templates.py:718] hit 1yfn_C did not pass prefilter: Template too short. Length: 7.
I0303 13:40:31.577178 140497557509952 templates.py:718] hit 1yfn_D did not pass prefilter: Template too short. Length: 7.
I0303 13:40:32.590065 140497557509952 templates.py:267] Found an exact template match 1zsz_B.
I0303 13:40:32.596342 140497557509952 templates.py:267] Found an exact template match 1zsz_A.
I0303 13:40:32.752059 140497557509952 templates.py:267] Found an exact template match 1ou8_A.
I0303 13:40:32.758735 140497557509952 templates.py:267] Found an exact template match 1ou8_B.
I0303 13:40:32.913893 140497557509952 templates.py:267] Found an exact template match 1twb_A.
I0303 13:40:32.920107 140497557509952 templates.py:267] Found an exact template match 1twb_B.
I0303 13:40:32.926024 140497557509952 templates.py:718] hit 8et3_Y did not pass prefilter: Template too short. Length: 7.
I0303 13:40:32.926130 140497557509952 templates.py:718] hit 8et3_Z did not pass prefilter: Template too short. Length: 7.
I0303 13:40:47.023443 140497557509952 templates.py:267] Found an exact template match 3jbn_A3.
I0303 13:40:47.030966 140497557509952 templates.py:718] hit 3jbn_A3 did not pass prefilter: Template too short. Length: 8.
I0303 13:41:02.363517 140497557509952 templates.py:267] Found an exact template match 3jbo_A3.
I0303 13:41:02.369962 140497557509952 templates.py:718] hit 3jbo_A3 did not pass prefilter: Template too short. Length: 8.
I0303 13:41:16.325509 140497557509952 templates.py:267] Found an exact template match 3jbp_A3.
I0303 13:41:16.332513 140497557509952 templates.py:718] hit 3jbp_A3 did not pass prefilter: Template too short. Length: 8.
I0303 13:41:16.332662 140497557509952 templates.py:718] hit 1ox9_A did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.332749 140497557509952 templates.py:718] hit 1ox9_B did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.332845 140497557509952 templates.py:718] hit 1ox9_C did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.332919 140497557509952 templates.py:718] hit 1ox9_D did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.332991 140497557509952 templates.py:718] hit 1ox9_E did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.333061 140497557509952 templates.py:718] hit 1ox9_F did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.333149 140497557509952 templates.py:718] hit 1ox9_G did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.333234 140497557509952 templates.py:718] hit 1ox9_H did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.333302 140497557509952 templates.py:718] hit 1ox8_A did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.333384 140497557509952 templates.py:718] hit 1ox8_B did not pass prefilter: Template too short. Length: 7.
I0303 13:41:16.566423 140497557509952 templates.py:267] Found an exact template match 1ou9_A.
I0303 13:41:16.573092 140497557509952 templates.py:267] Found an exact template match 1ou9_B.
I0303 13:41:16.578828 140497557509952 templates.py:267] Found an exact template match 1ou9_C.
I0303 13:41:16.720768 140497557509952 templates.py:267] Found an exact template match 1oul_A.
I0303 13:41:16.726277 140497557509952 templates.py:267] Found an exact template match 1oul_B.
I0303 13:41:16.731483 140497557509952 templates.py:718] hit 4v8m_A6 did not pass prefilter: Template too short. Length: 5.
I0303 13:41:16.731589 140497557509952 templates.py:718] hit 4v8m_A6 did not pass prefilter: Template too short. Length: 8.
I0303 13:41:37.527904 140497557509952 templates.py:267] Found an exact template match 4v8m_A6.
I0303 13:41:47.175831 140497557509952 templates.py:267] Found an exact template match 3j79_3.
I0303 13:41:47.182049 140497557509952 templates.py:718] hit 3j79_3 did not pass prefilter: Template too short. Length: 8.
I0303 13:41:55.220887 140497557509952 templates.py:267] Found an exact template match 5umd_3.
I0303 13:41:55.227219 140497557509952 templates.py:718] hit 5umd_3 did not pass prefilter: Template too short. Length: 8.
I0303 13:41:55.227346 140497557509952 templates.py:718] hit 6os9_L did not pass prefilter: Template too short. Length: 6.
I0303 13:41:55.227437 140497557509952 templates.py:718] hit 6osa_L did not pass prefilter: Template too short. Length: 6.
I0303 13:41:55.227525 140497557509952 templates.py:718] hit 5t2a_6 did not pass prefilter: Template too short. Length: 5.
I0303 13:41:55.227605 140497557509952 templates.py:718] hit 5t2a_6 did not pass prefilter: Template too short. Length: 8.
I0303 13:42:09.771939 140497557509952 templates.py:267] Found an exact template match 5t2a_6.
I0303 13:42:09.780498 140497557509952 templates.py:718] hit 6az1_D did not pass prefilter: Template too short. Length: 5.
I0303 13:42:09.780611 140497557509952 templates.py:718] hit 6az1_D did not pass prefilter: Template too short. Length: 8.
I0303 13:42:17.096552 140497557509952 templates.py:267] Found an exact template match 6az1_D.
I0303 13:42:17.105495 140497557509952 templates.py:718] hit 4c3o_B did not pass prefilter: Template too short. Length: 9.
I0303 13:42:17.105611 140497557509952 templates.py:718] hit 4c3o_D did not pass prefilter: Template too short. Length: 9.
I0303 13:42:17.105699 140497557509952 templates.py:718] hit 4c3o_F did not pass prefilter: Template too short. Length: 9.
I0303 13:42:17.105782 140497557509952 templates.py:718] hit 7ase_B did not pass prefilter: Template too short. Length: 5.
I0303 13:42:17.105858 140497557509952 templates.py:718] hit 7ase_B did not pass prefilter: Template too short. Length: 8.
I0303 13:42:26.210323 140497557509952 templates.py:267] Found an exact template match 7ase_B.
I0303 13:42:26.219545 140497557509952 templates.py:718] hit 5opt_b did not pass prefilter: Template too short. Length: 5.
I0303 13:42:26.219662 140497557509952 templates.py:718] hit 5opt_b did not pass prefilter: Template too short. Length: 8.
I0303 13:42:31.530369 140497557509952 templates.py:267] Found an exact template match 5opt_b.
I0303 13:42:31.539567 140497557509952 pipeline.py:234] Uniref90 MSA size: 1 sequences.
I0303 13:42:31.539688 140497557509952 pipeline.py:235] BFD MSA size: 28 sequences.
I0303 13:42:31.539752 140497557509952 pipeline.py:236] MGnify MSA size: 1 sequences.
I0303 13:42:31.539808 140497557509952 pipeline.py:237] Final (deduplicated) MSA size: 28 sequences.
I0303 13:42:31.539879 140497557509952 pipeline.py:239] Total number of templates (NB: this can include bad templates and is later filtered to top 4): 6.
W0303 13:42:31.546020 140497557509952 pipeline.py:100] Reading MSA from file /projects/ilfgrid/people/nqz918/code/deorph/scripts/af_arman/af_jobs_af23/gpr39_human/1579/gpr39_human-1579/msas/B/uniprot_hits.sto
I0303 13:42:32.451825 140497557509952 run_alphafold.py:191] Running model model_1_multimer_v3_pred_0 on gpr39_human-1579
I0303 13:42:32.453097 140497557509952 model.py:165] Running predict with shape(feat) = {'aatype': (466,), 'residue_index': (466,), 'seq_length': (), 'msa': (2075, 466), 'num_alignments': (), 'template_aatype': (4, 466), 'template_all_atom_mask': (4, 466, 37), 'template_all_atom_positions': (4, 466, 37, 3), 'asym_id': (466,), 'sym_id': (466,), 'entity_id': (466,), 'deletion_matrix': (2075, 466), 'deletion_mean': (466,), 'all_atom_mask': (466, 37), 'all_atom_positions': (466, 37, 3), 'assembly_num_chains': (), 'entity_mask': (466,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 466), 'seq_mask': (466,), 'msa_mask': (2075, 466)}
I0303 14:10:50.899993 140497557509952 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (466, 466, 64)}, 'experimentally_resolved': {'logits': (466, 37)}, 'masked_msa': {'logits': (508, 466, 22)}, 'num_recycles': (), 'predicted_aligned_error': (466, 466), 'predicted_lddt': {'logits': (466, 50)}, 'structure_module': {'final_atom_mask': (466, 37), 'final_atom_positions': (466, 37, 3)}, 'plddt': (466,), 'aligned_confidence_probs': (466, 466, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 14:10:50.901358 140497557509952 run_alphafold.py:203] Total JAX model model_1_multimer_v3_pred_0 on gpr39_human-1579 predict time (includes compilation time, see --benchmark): 1698.4s
I0303 14:11:04.484899 140497557509952 run_alphafold.py:191] Running model model_2_multimer_v3_pred_0 on gpr39_human-1579
I0303 14:11:04.485520 140497557509952 model.py:165] Running predict with shape(feat) = {'aatype': (466,), 'residue_index': (466,), 'seq_length': (), 'msa': (2075, 466), 'num_alignments': (), 'template_aatype': (4, 466), 'template_all_atom_mask': (4, 466, 37), 'template_all_atom_positions': (4, 466, 37, 3), 'asym_id': (466,), 'sym_id': (466,), 'entity_id': (466,), 'deletion_matrix': (2075, 466), 'deletion_mean': (466,), 'all_atom_mask': (466, 37), 'all_atom_positions': (466, 37, 3), 'assembly_num_chains': (), 'entity_mask': (466,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 466), 'seq_mask': (466,), 'msa_mask': (2075, 466)}
I0303 14:24:52.701641 140497557509952 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (466, 466, 64)}, 'experimentally_resolved': {'logits': (466, 37)}, 'masked_msa': {'logits': (508, 466, 22)}, 'num_recycles': (), 'predicted_aligned_error': (466, 466), 'predicted_lddt': {'logits': (466, 50)}, 'structure_module': {'final_atom_mask': (466, 37), 'final_atom_positions': (466, 37, 3)}, 'plddt': (466,), 'aligned_confidence_probs': (466, 466, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 14:24:52.707588 140497557509952 run_alphafold.py:203] Total JAX model model_2_multimer_v3_pred_0 on gpr39_human-1579 predict time (includes compilation time, see --benchmark): 828.2s
I0303 14:25:06.080478 140497557509952 run_alphafold.py:191] Running model model_3_multimer_v3_pred_0 on gpr39_human-1579
I0303 14:25:06.080909 140497557509952 model.py:165] Running predict with shape(feat) = {'aatype': (466,), 'residue_index': (466,), 'seq_length': (), 'msa': (2075, 466), 'num_alignments': (), 'template_aatype': (4, 466), 'template_all_atom_mask': (4, 466, 37), 'template_all_atom_positions': (4, 466, 37, 3), 'asym_id': (466,), 'sym_id': (466,), 'entity_id': (466,), 'deletion_matrix': (2075, 466), 'deletion_mean': (466,), 'all_atom_mask': (466, 37), 'all_atom_positions': (466, 37, 3), 'assembly_num_chains': (), 'entity_mask': (466,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 466), 'seq_mask': (466,), 'msa_mask': (2075, 466)}
I0303 14:53:41.590362 140497557509952 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (466, 466, 64)}, 'experimentally_resolved': {'logits': (466, 37)}, 'masked_msa': {'logits': (508, 466, 22)}, 'num_recycles': (), 'predicted_aligned_error': (466, 466), 'predicted_lddt': {'logits': (466, 50)}, 'structure_module': {'final_atom_mask': (466, 37), 'final_atom_positions': (466, 37, 3)}, 'plddt': (466,), 'aligned_confidence_probs': (466, 466, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 14:53:41.591986 140497557509952 run_alphafold.py:203] Total JAX model model_3_multimer_v3_pred_0 on gpr39_human-1579 predict time (includes compilation time, see --benchmark): 1715.5s
I0303 14:53:56.936243 140497557509952 run_alphafold.py:191] Running model model_4_multimer_v3_pred_0 on gpr39_human-1579
I0303 14:53:56.937530 140497557509952 model.py:165] Running predict with shape(feat) = {'aatype': (466,), 'residue_index': (466,), 'seq_length': (), 'msa': (2075, 466), 'num_alignments': (), 'template_aatype': (4, 466), 'template_all_atom_mask': (4, 466, 37), 'template_all_atom_positions': (4, 466, 37, 3), 'asym_id': (466,), 'sym_id': (466,), 'entity_id': (466,), 'deletion_matrix': (2075, 466), 'deletion_mean': (466,), 'all_atom_mask': (466, 37), 'all_atom_positions': (466, 37, 3), 'assembly_num_chains': (), 'entity_mask': (466,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 466), 'seq_mask': (466,), 'msa_mask': (2075, 466)}
I0303 15:22:08.303420 140497557509952 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (466, 466, 64)}, 'experimentally_resolved': {'logits': (466, 37)}, 'masked_msa': {'logits': (508, 466, 22)}, 'num_recycles': (), 'predicted_aligned_error': (466, 466), 'predicted_lddt': {'logits': (466, 50)}, 'structure_module': {'final_atom_mask': (466, 37), 'final_atom_positions': (466, 37, 3)}, 'plddt': (466,), 'aligned_confidence_probs': (466, 466, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 15:22:08.305110 140497557509952 run_alphafold.py:203] Total JAX model model_4_multimer_v3_pred_0 on gpr39_human-1579 predict time (includes compilation time, see --benchmark): 1691.4s
I0303 15:22:26.926051 140497557509952 run_alphafold.py:191] Running model model_5_multimer_v3_pred_0 on gpr39_human-1579
I0303 15:22:26.926660 140497557509952 model.py:165] Running predict with shape(feat) = {'aatype': (466,), 'residue_index': (466,), 'seq_length': (), 'msa': (2075, 466), 'num_alignments': (), 'template_aatype': (4, 466), 'template_all_atom_mask': (4, 466, 37), 'template_all_atom_positions': (4, 466, 37, 3), 'asym_id': (466,), 'sym_id': (466,), 'entity_id': (466,), 'deletion_matrix': (2075, 466), 'deletion_mean': (466,), 'all_atom_mask': (466, 37), 'all_atom_positions': (466, 37, 3), 'assembly_num_chains': (), 'entity_mask': (466,), 'num_templates': (), 'cluster_bias_mask': (2075,), 'bert_mask': (2075, 466), 'seq_mask': (466,), 'msa_mask': (2075, 466)}
I0303 15:35:22.066858 140497557509952 model.py:175] Output shape was {'distogram': {'bin_edges': (63,), 'logits': (466, 466, 64)}, 'experimentally_resolved': {'logits': (466, 37)}, 'masked_msa': {'logits': (508, 466, 22)}, 'num_recycles': (), 'predicted_aligned_error': (466, 466), 'predicted_lddt': {'logits': (466, 50)}, 'structure_module': {'final_atom_mask': (466, 37), 'final_atom_positions': (466, 37, 3)}, 'plddt': (466,), 'aligned_confidence_probs': (466, 466, 64), 'max_predicted_aligned_error': (), 'ptm': (), 'iptm': (), 'ranking_confidence': ()}
I0303 15:35:22.069283 140497557509952 run_alphafold.py:203] Total JAX model model_5_multimer_v3_pred_0 on gpr39_human-1579 predict time (includes compilation time, see --benchmark): 775.1s
I0303 15:35:35.481919 140497557509952 run_alphafold.py:277] Final timings for gpr39_human-1579: {'features': 224.25634121894836, 'process_features_model_1_multimer_v3_pred_0': 3.62396240234375e-05, 'predict_and_compile_model_1_multimer_v3_pred_0': 1698.4492802619934, 'process_features_model_2_multimer_v3_pred_0': 3.0517578125e-05, 'predict_and_compile_model_2_multimer_v3_pred_0': 828.2223181724548, 'process_features_model_3_multimer_v3_pred_0': 3.6716461181640625e-05, 'predict_and_compile_model_3_multimer_v3_pred_0': 1715.5112657546997, 'process_features_model_4_multimer_v3_pred_0': 6.961822509765625e-05, 'predict_and_compile_model_4_multimer_v3_pred_0': 1691.3680505752563, 'process_features_model_5_multimer_v3_pred_0': 2.5033950805664062e-05, 'predict_and_compile_model_5_multimer_v3_pred_0': 775.1429278850555}

>> Job finished at: Fri Mar  3 15:35:57 CET 2023

>> Runtime: 7043 s
